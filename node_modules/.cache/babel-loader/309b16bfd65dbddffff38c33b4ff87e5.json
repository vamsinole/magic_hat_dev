{"ast":null,"code":"import _asyncToGenerator from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _get from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _createForOfIteratorHelper from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/regenerator/index.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport BN from 'bn.js';\nimport { sendAndConfirmTransaction as sendAndConfirmTransaction$1, PublicKey, Keypair, Transaction, SystemProgram, SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nvar buffer = {};\nvar base64Js = {};\nbase64Js.byteLength = byteLength;\nbase64Js.toByteArray = toByteArray;\nbase64Js.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}\n\nvar ieee754 = {};\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\nieee754.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nieee754.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n\n(function (exports) {\n  var base64 = base64Js;\n  var ieee754$1 = ieee754;\n  var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n  ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n  : null;\n  exports.Buffer = Buffer;\n  exports.SlowBuffer = SlowBuffer;\n  exports.INSPECT_MAX_BYTES = 50;\n  var K_MAX_LENGTH = 0x7fffffff;\n  exports.kMaxLength = K_MAX_LENGTH;\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n   *               implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * We report that the browser does not support typed arrays if the are not subclassable\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n   * for __proto__ and has a buggy typed array implementation.\n   */\n\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n  }\n\n  function typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n      var arr = new Uint8Array(1);\n      var proto = {\n        foo: function foo() {\n          return 42;\n        }\n      };\n      Object.setPrototypeOf(proto, Uint8Array.prototype);\n      Object.setPrototypeOf(arr, proto);\n      return arr.foo() === 42;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  Object.defineProperty(Buffer.prototype, 'parent', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.buffer;\n    }\n  });\n  Object.defineProperty(Buffer.prototype, 'offset', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.byteOffset;\n    }\n  });\n\n  function createBuffer(length) {\n    if (length > K_MAX_LENGTH) {\n      throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    } // Return an augmented `Uint8Array` instance\n\n\n    var buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n\n  function Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === 'number') {\n      if (typeof encodingOrOffset === 'string') {\n        throw new TypeError('The \"string\" argument must be of type string. Received type number');\n      }\n\n      return allocUnsafe(arg);\n    }\n\n    return from(arg, encodingOrOffset, length);\n  }\n\n  Buffer.poolSize = 8192; // not used by this implementation\n\n  function from(value, encodingOrOffset, length) {\n    if (typeof value === 'string') {\n      return fromString(value, encodingOrOffset);\n    }\n\n    if (ArrayBuffer.isView(value)) {\n      return fromArrayView(value);\n    }\n\n    if (value == null) {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n    }\n\n    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    }\n\n    var valueOf = value.valueOf && value.valueOf();\n\n    if (valueOf != null && valueOf !== value) {\n      return Buffer.from(valueOf, encodingOrOffset, length);\n    }\n\n    var b = fromObject(value);\n    if (b) return b;\n\n    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n      return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n    }\n\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n\n\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length);\n  }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n  // https://github.com/feross/buffer/pull/148\n\n\n  Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n  Object.setPrototypeOf(Buffer, Uint8Array);\n\n  function assertSize(size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('\"size\" argument must be of type number');\n    } else if (size < 0) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n  }\n\n  function alloc(size, fill, encoding) {\n    assertSize(size);\n\n    if (size <= 0) {\n      return createBuffer(size);\n    }\n\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpreted as a start offset.\n      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n    }\n\n    return createBuffer(size);\n  }\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n\n\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(size, fill, encoding);\n  };\n\n  function allocUnsafe(size) {\n    assertSize(size);\n    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n  }\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n\n\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(size);\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n\n\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(size);\n  };\n\n  function fromString(string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n      encoding = 'utf8';\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    var length = byteLength(string, encoding) | 0;\n    var buf = createBuffer(length);\n    var actual = buf.write(string, encoding);\n\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      buf = buf.slice(0, actual);\n    }\n\n    return buf;\n  }\n\n  function fromArrayLike(array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(length);\n\n    for (var _i = 0; _i < length; _i += 1) {\n      buf[_i] = array[_i] & 255;\n    }\n\n    return buf;\n  }\n\n  function fromArrayView(arrayView) {\n    if (isInstance(arrayView, Uint8Array)) {\n      var copy = new Uint8Array(arrayView);\n      return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n    }\n\n    return fromArrayLike(arrayView);\n  }\n\n  function fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError('\"offset\" is outside of buffer bounds');\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError('\"length\" is outside of buffer bounds');\n    }\n\n    var buf;\n\n    if (byteOffset === undefined && length === undefined) {\n      buf = new Uint8Array(array);\n    } else if (length === undefined) {\n      buf = new Uint8Array(array, byteOffset);\n    } else {\n      buf = new Uint8Array(array, byteOffset, length);\n    } // Return an augmented `Uint8Array` instance\n\n\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n\n  function fromObject(obj) {\n    if (Buffer.isBuffer(obj)) {\n      var _len = checked(obj.length) | 0;\n\n      var buf = createBuffer(_len);\n\n      if (buf.length === 0) {\n        return buf;\n      }\n\n      obj.copy(buf, 0, 0, _len);\n      return buf;\n    }\n\n    if (obj.length !== undefined) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0);\n      }\n\n      return fromArrayLike(obj);\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n\n  function checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n\n    return length | 0;\n  }\n\n  function SlowBuffer(length) {\n    if (+length != length) {\n      // eslint-disable-line eqeqeq\n      length = 0;\n    }\n\n    return Buffer.alloc(+length);\n  }\n\n  Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n  };\n\n  Buffer.compare = function compare(a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n      throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    }\n\n    if (a === b) return 0;\n    var x = a.length;\n    var y = b.length;\n\n    for (var _i2 = 0, _len2 = Math.min(x, y); _i2 < _len2; ++_i2) {\n      if (a[_i2] !== b[_i2]) {\n        x = a[_i2];\n        y = b[_i2];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  };\n\n  Buffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    if (list.length === 0) {\n      return Buffer.alloc(0);\n    }\n\n    var i;\n\n    if (length === undefined) {\n      length = 0;\n\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n\n    var buffer = Buffer.allocUnsafe(length);\n    var pos = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      var buf = list[i];\n\n      if (isInstance(buf, Uint8Array)) {\n        if (pos + buf.length > buffer.length) {\n          if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n          buf.copy(buffer, pos);\n        } else {\n          Uint8Array.prototype.set.call(buffer, buf, pos);\n        }\n      } else if (!Buffer.isBuffer(buf)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      } else {\n        buf.copy(buffer, pos);\n      }\n\n      pos += buf.length;\n    }\n\n    return buffer;\n  };\n\n  function byteLength(string, encoding) {\n    if (Buffer.isBuffer(string)) {\n      return string.length;\n    }\n\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n      return string.byteLength;\n    }\n\n    if (typeof string !== 'string') {\n      throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n    }\n\n    var len = string.length;\n    var mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return len;\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8ToBytes(string).length;\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return len * 2;\n\n        case 'hex':\n          return len >>> 1;\n\n        case 'base64':\n          return base64ToBytes(string).length;\n\n        default:\n          if (loweredCase) {\n            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n          }\n\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  Buffer.byteLength = byteLength;\n\n  function slowToString(encoding, start, end) {\n    var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n    if (start === undefined || start < 0) {\n      start = 0;\n    } // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n\n\n    if (start > this.length) {\n      return '';\n    }\n\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n\n    if (end <= 0) {\n      return '';\n    } // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n    end >>>= 0;\n    start >>>= 0;\n\n    if (end <= start) {\n      return '';\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    while (true) {\n      switch (encoding) {\n        case 'hex':\n          return hexSlice(this, start, end);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Slice(this, start, end);\n\n        case 'ascii':\n          return asciiSlice(this, start, end);\n\n        case 'latin1':\n        case 'binary':\n          return latin1Slice(this, start, end);\n\n        case 'base64':\n          return base64Slice(this, start, end);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return utf16leSlice(this, start, end);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = (encoding + '').toLowerCase();\n          loweredCase = true;\n      }\n    }\n  } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n  // reliably in a browserify context because there could be multiple different\n  // copies of the 'buffer' package in use. This method works even for Buffer\n  // instances that were created from another copy of the `buffer` package.\n  // See: https://github.com/feross/buffer/issues/154\n\n\n  Buffer.prototype._isBuffer = true;\n\n  function swap(b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n\n  Buffer.prototype.swap16 = function swap16() {\n    var len = this.length;\n\n    if (len % 2 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 16-bits');\n    }\n\n    for (var _i3 = 0; _i3 < len; _i3 += 2) {\n      swap(this, _i3, _i3 + 1);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap32 = function swap32() {\n    var len = this.length;\n\n    if (len % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits');\n    }\n\n    for (var _i4 = 0; _i4 < len; _i4 += 4) {\n      swap(this, _i4, _i4 + 3);\n      swap(this, _i4 + 1, _i4 + 2);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap64 = function swap64() {\n    var len = this.length;\n\n    if (len % 8 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 64-bits');\n    }\n\n    for (var _i5 = 0; _i5 < len; _i5 += 8) {\n      swap(this, _i5, _i5 + 7);\n      swap(this, _i5 + 1, _i5 + 6);\n      swap(this, _i5 + 2, _i5 + 5);\n      swap(this, _i5 + 3, _i5 + 4);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.toString = function toString() {\n    var length = this.length;\n    if (length === 0) return '';\n    if (arguments.length === 0) return utf8Slice(this, 0, length);\n    return slowToString.apply(this, arguments);\n  };\n\n  Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n  Buffer.prototype.equals = function equals(b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n    if (this === b) return true;\n    return Buffer.compare(this, b) === 0;\n  };\n\n  Buffer.prototype.inspect = function inspect() {\n    var str = '';\n    var max = exports.INSPECT_MAX_BYTES;\n    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n    if (this.length > max) str += ' ... ';\n    return '<Buffer ' + str + '>';\n  };\n\n  if (customInspectSymbol) {\n    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n  }\n\n  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) {\n      target = Buffer.from(target, target.offset, target.byteLength);\n    }\n\n    if (!Buffer.isBuffer(target)) {\n      throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n    }\n\n    if (start === undefined) {\n      start = 0;\n    }\n\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError('out of range index');\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n      return 0;\n    }\n\n    if (thisStart >= thisEnd) {\n      return -1;\n    }\n\n    if (start >= end) {\n      return 1;\n    }\n\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n\n    for (var _i6 = 0; _i6 < len; ++_i6) {\n      if (thisCopy[_i6] !== targetCopy[_i6]) {\n        x = thisCopy[_i6];\n        y = targetCopy[_i6];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n\n\n  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1; // Normalize byteOffset\n\n    if (typeof byteOffset === 'string') {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff;\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000;\n    }\n\n    byteOffset = +byteOffset; // Coerce to Number.\n\n    if (numberIsNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : buffer.length - 1;\n    } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1;else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;else return -1;\n    } // Normalize val\n\n\n    if (typeof val === 'string') {\n      val = Buffer.from(val, encoding);\n    } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n    if (Buffer.isBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1;\n      }\n\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === 'number') {\n      val = val & 0xFF; // Search for a byte value [0-255]\n\n      if (typeof Uint8Array.prototype.indexOf === 'function') {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n      }\n\n      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n    }\n\n    throw new TypeError('val must be string, number or Buffer');\n  }\n\n  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n\n      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n        if (arr.length < 2 || val.length < 2) {\n          return -1;\n        }\n\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n\n    function read(buf, i) {\n      if (indexSize === 1) {\n        return buf[i];\n      } else {\n        return buf.readUInt16BE(i * indexSize);\n      }\n    }\n\n    var i;\n\n    if (dir) {\n      var foundIndex = -1;\n\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n      for (i = byteOffset; i >= 0; i--) {\n        var found = true;\n\n        for (var j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break;\n          }\n        }\n\n        if (found) return i;\n      }\n    }\n\n    return -1;\n  }\n\n  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n  };\n\n  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n  };\n\n  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n  };\n\n  function hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n\n    var strLen = string.length;\n\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n\n    var i;\n\n    for (i = 0; i < length; ++i) {\n      var parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (numberIsNaN(parsed)) return i;\n      buf[offset + i] = parsed;\n    }\n\n    return i;\n  }\n\n  function utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  function asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length);\n  }\n\n  function base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length);\n  }\n\n  function ucs2Write(buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = 'utf8';\n      length = this.length;\n      offset = 0; // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n      encoding = offset;\n      length = this.length;\n      offset = 0; // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset >>> 0;\n\n      if (isFinite(length)) {\n        length = length >>> 0;\n        if (encoding === undefined) encoding = 'utf8';\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    } else {\n      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n    }\n\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n      throw new RangeError('Attempt to write outside buffer bounds');\n    }\n\n    if (!encoding) encoding = 'utf8';\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'hex':\n          return hexWrite(this, string, offset, length);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Write(this, string, offset, length);\n\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return asciiWrite(this, string, offset, length);\n\n        case 'base64':\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return ucs2Write(this, string, offset, length);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n\n  Buffer.prototype.toJSON = function toJSON() {\n    return {\n      type: 'Buffer',\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n  };\n\n  function base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return base64.fromByteArray(buf);\n    } else {\n      return base64.fromByteArray(buf.slice(start, end));\n    }\n  }\n\n  function utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n    var i = start;\n\n    while (i < end) {\n      var firstByte = buf[i];\n      var codePoint = null;\n      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n      if (i + bytesPerSequence <= end) {\n        var secondByte = void 0,\n            thirdByte = void 0,\n            fourthByte = void 0,\n            tempCodePoint = void 0;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte;\n            }\n\n            break;\n\n          case 2:\n            secondByte = buf[i + 1];\n\n            if ((secondByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n              if (tempCodePoint > 0x7F) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xFFFD;\n        bytesPerSequence = 1;\n      } else if (codePoint > 0xFFFF) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000;\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n        codePoint = 0xDC00 | codePoint & 0x3FF;\n      }\n\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n\n    return decodeCodePointsArray(res);\n  } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n\n\n  var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n  function decodeCodePointsArray(codePoints) {\n    var len = codePoints.length;\n\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n    } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n    var res = '';\n    var i = 0;\n\n    while (i < len) {\n      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n    }\n\n    return res;\n  }\n\n  function asciiSlice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var _i7 = start; _i7 < end; ++_i7) {\n      ret += String.fromCharCode(buf[_i7] & 0x7F);\n    }\n\n    return ret;\n  }\n\n  function latin1Slice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var _i8 = start; _i8 < end; ++_i8) {\n      ret += String.fromCharCode(buf[_i8]);\n    }\n\n    return ret;\n  }\n\n  function hexSlice(buf, start, end) {\n    var len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    var out = '';\n\n    for (var _i9 = start; _i9 < end; ++_i9) {\n      out += hexSliceLookupTable[buf[_i9]];\n    }\n\n    return out;\n  }\n\n  function utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = ''; // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n\n    for (var _i10 = 0; _i10 < bytes.length - 1; _i10 += 2) {\n      res += String.fromCharCode(bytes[_i10] + bytes[_i10 + 1] * 256);\n    }\n\n    return res;\n  }\n\n  Buffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n\n    if (end < start) end = start;\n    var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n    Object.setPrototypeOf(newBuf, Buffer.prototype);\n    return newBuf;\n  };\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n\n\n  function checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n  }\n\n  Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n\n    var val = this[offset + --byteLength];\n    var mul = 1;\n\n    while (byteLength > 0 && (mul *= 0x100)) {\n      val += this[offset + --byteLength] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset];\n  };\n\n  Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n  };\n\n  Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n  };\n\n  Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n  };\n\n  Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n  };\n\n  Buffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var lo = first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24);\n    var hi = this[++offset] + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + last * Math.pow(2, 24);\n    return BigInt(lo) + (BigInt(hi) << BigInt(32));\n  });\n  Buffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var hi = first * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];\n    var lo = this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last;\n    return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  });\n\n  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n\n    while (i > 0 && (mul *= 0x100)) {\n      val += this[offset + --i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n  };\n\n  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n  };\n\n  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n  };\n\n  Buffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var val = this[offset + 4] + this[offset + 5] * Math.pow(2, 8) + this[offset + 6] * Math.pow(2, 16) + (last << 24); // Overflow\n\n    return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24));\n  });\n  Buffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n    offset = offset >>> 0;\n    validateNumber(offset, 'offset');\n    var first = this[offset];\n    var last = this[offset + 7];\n\n    if (first === undefined || last === undefined) {\n      boundsError(offset, this.length - 8);\n    }\n\n    var val = (first << 24) + // Overflow\n    this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];\n    return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last);\n  });\n\n  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754$1.read(this, offset, true, 23, 4);\n  };\n\n  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754$1.read(this, offset, false, 23, 4);\n  };\n\n  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754$1.read(this, offset, true, 52, 8);\n  };\n\n  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754$1.read(this, offset, false, 52, 8);\n  };\n\n  function checkInt(buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  }\n\n  Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  function wrtBigUInt64LE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    var lo = Number(value & BigInt(0xffffffff));\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    lo = lo >> 8;\n    buf[offset++] = lo;\n    var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    hi = hi >> 8;\n    buf[offset++] = hi;\n    return offset;\n  }\n\n  function wrtBigUInt64BE(buf, value, offset, min, max) {\n    checkIntBI(value, min, max, buf, offset, 7);\n    var lo = Number(value & BigInt(0xffffffff));\n    buf[offset + 7] = lo;\n    lo = lo >> 8;\n    buf[offset + 6] = lo;\n    lo = lo >> 8;\n    buf[offset + 5] = lo;\n    lo = lo >> 8;\n    buf[offset + 4] = lo;\n    var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n    buf[offset + 3] = hi;\n    hi = hi >> 8;\n    buf[offset + 2] = hi;\n    hi = hi >> 8;\n    buf[offset + 1] = hi;\n    hi = hi >> 8;\n    buf[offset] = hi;\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n  });\n  Buffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n  });\n\n  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n  });\n  Buffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value) {\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n  });\n\n  function checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    if (offset < 0) throw new RangeError('Index out of range');\n  }\n\n  function writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4);\n    }\n\n    ieee754$1.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n  }\n\n  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert);\n  };\n\n  function writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8);\n    }\n\n    ieee754$1.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert);\n  }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n  Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n    if (targetStart < 0) {\n      throw new RangeError('targetStart out of bounds');\n    }\n\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n    if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n    if (end > this.length) end = this.length;\n\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n\n    var len = end - start;\n\n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n      // Use built-in when available, missing from IE11\n      this.copyWithin(targetStart, start, end);\n    } else {\n      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    }\n\n    return len;\n  }; // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n  Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n      if (typeof start === 'string') {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === 'string') {\n        encoding = end;\n        end = this.length;\n      }\n\n      if (encoding !== undefined && typeof encoding !== 'string') {\n        throw new TypeError('encoding must be a string');\n      }\n\n      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding);\n      }\n\n      if (val.length === 1) {\n        var _code = val.charCodeAt(0);\n\n        if (encoding === 'utf8' && _code < 128 || encoding === 'latin1') {\n          // Fast path: If `val` fits into a single byte, use that numeric value.\n          val = _code;\n        }\n      }\n    } else if (typeof val === 'number') {\n      val = val & 255;\n    } else if (typeof val === 'boolean') {\n      val = Number(val);\n    } // Invalid ranges are not set to a default, so can range check early.\n\n\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError('Out of range index');\n    }\n\n    if (end <= start) {\n      return this;\n    }\n\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    var i;\n\n    if (typeof val === 'number') {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n      var _len3 = bytes.length;\n\n      if (_len3 === 0) {\n        throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n      }\n\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % _len3];\n      }\n    }\n\n    return this;\n  }; // CUSTOM ERRORS\n  // =============\n  // Simplified versions from Node, changed for Buffer-only usage\n\n\n  var errors = {};\n\n  function E(sym, getMessage, Base) {\n    errors[sym] = /*#__PURE__*/function (_Base) {\n      _inherits(NodeError, _Base);\n\n      var _super = _createSuper(NodeError);\n\n      function NodeError() {\n        var _this;\n\n        _classCallCheck(this, NodeError);\n\n        _this = _super.call(this);\n        Object.defineProperty(_assertThisInitialized(_this), 'message', {\n          value: getMessage.apply(_assertThisInitialized(_this), arguments),\n          writable: true,\n          configurable: true\n        }); // Add the error code to the name to include it in the stack trace.\n\n        _this.name = \"\".concat(_this.name, \" [\").concat(sym, \"]\"); // Access the stack to generate the error message including the error code\n        // from the name.\n\n        _this.stack; // eslint-disable-line no-unused-expressions\n        // Reset the name to the actual name.\n\n        delete _this.name;\n        return _this;\n      }\n\n      _createClass(NodeError, [{\n        key: \"code\",\n        get: function get() {\n          return sym;\n        },\n        set: function set(value) {\n          Object.defineProperty(this, 'code', {\n            configurable: true,\n            enumerable: true,\n            value: value,\n            writable: true\n          });\n        }\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return \"\".concat(this.name, \" [\").concat(sym, \"]: \").concat(this.message);\n        }\n      }]);\n\n      return NodeError;\n    }(Base);\n  }\n\n  E('ERR_BUFFER_OUT_OF_BOUNDS', function (name) {\n    if (name) {\n      return \"\".concat(name, \" is outside of buffer bounds\");\n    }\n\n    return 'Attempt to access memory outside buffer bounds';\n  }, RangeError);\n  E('ERR_INVALID_ARG_TYPE', function (name, actual) {\n    return \"The \\\"\".concat(name, \"\\\" argument must be of type number. Received type \").concat(typeof actual);\n  }, TypeError);\n  E('ERR_OUT_OF_RANGE', function (str, range, input) {\n    var msg = \"The value of \\\"\".concat(str, \"\\\" is out of range.\");\n    var received = input;\n\n    if (Number.isInteger(input) && Math.abs(input) > Math.pow(2, 32)) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n\n      if (input > Math.pow(BigInt(2), BigInt(32)) || input < -Math.pow(BigInt(2), BigInt(32))) {\n        received = addNumericalSeparator(received);\n      }\n\n      received += 'n';\n    }\n\n    msg += \" It must be \".concat(range, \". Received \").concat(received);\n    return msg;\n  }, RangeError);\n\n  function addNumericalSeparator(val) {\n    var res = '';\n    var i = val.length;\n    var start = val[0] === '-' ? 1 : 0;\n\n    for (; i >= start + 4; i -= 3) {\n      res = \"_\".concat(val.slice(i - 3, i)).concat(res);\n    }\n\n    return \"\".concat(val.slice(0, i)).concat(res);\n  } // CHECK FUNCTIONS\n  // ===============\n\n\n  function checkBounds(buf, offset, byteLength) {\n    validateNumber(offset, 'offset');\n\n    if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n      boundsError(offset, buf.length - (byteLength + 1));\n    }\n  }\n\n  function checkIntBI(value, min, max, buf, offset, byteLength) {\n    if (value > max || value < min) {\n      var n = typeof min === 'bigint' ? 'n' : '';\n      var range;\n\n      if (byteLength > 3) {\n        if (min === 0 || min === BigInt(0)) {\n          range = \">= 0\".concat(n, \" and < 2\").concat(n, \" ** \").concat((byteLength + 1) * 8).concat(n);\n        } else {\n          range = \">= -(2\".concat(n, \" ** \").concat((byteLength + 1) * 8 - 1).concat(n, \") and < 2 ** \") + \"\".concat((byteLength + 1) * 8 - 1).concat(n);\n        }\n      } else {\n        range = \">= \".concat(min).concat(n, \" and <= \").concat(max).concat(n);\n      }\n\n      throw new errors.ERR_OUT_OF_RANGE('value', range, value);\n    }\n\n    checkBounds(buf, offset, byteLength);\n  }\n\n  function validateNumber(value, name) {\n    if (typeof value !== 'number') {\n      throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);\n    }\n  }\n\n  function boundsError(value, length, type) {\n    if (Math.floor(value) !== value) {\n      validateNumber(value, type);\n      throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);\n    }\n\n    if (length < 0) {\n      throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n    }\n\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', \">= \".concat(type ? 1 : 0, \" and <= \").concat(length), value);\n  } // HELPER FUNCTIONS\n  // ================\n\n\n  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n  function base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n    str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n    if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n    while (str.length % 4 !== 0) {\n      str = str + '=';\n    }\n\n    return str;\n  }\n\n  function utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n\n    for (var _i11 = 0; _i11 < length; ++_i11) {\n      codePoint = string.charCodeAt(_i11); // is surrogate component\n\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 0xDBFF) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } else if (_i11 + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } // valid lead\n\n\n          leadSurrogate = codePoint;\n          continue;\n        } // 2 leads in a row\n\n\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          leadSurrogate = codePoint;\n          continue;\n        } // valid surrogate pair\n\n\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n      }\n\n      leadSurrogate = null; // encode utf8\n\n      if (codePoint < 0x80) {\n        if ((units -= 1) < 0) break;\n        bytes.push(codePoint);\n      } else if (codePoint < 0x800) {\n        if ((units -= 2) < 0) break;\n        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x10000) {\n        if ((units -= 3) < 0) break;\n        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x110000) {\n        if ((units -= 4) < 0) break;\n        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else {\n        throw new Error('Invalid code point');\n      }\n    }\n\n    return bytes;\n  }\n\n  function asciiToBytes(str) {\n    var byteArray = [];\n\n    for (var _i12 = 0; _i12 < str.length; ++_i12) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(_i12) & 0xFF);\n    }\n\n    return byteArray;\n  }\n\n  function utf16leToBytes(str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n\n    for (var _i13 = 0; _i13 < str.length; ++_i13) {\n      if ((units -= 2) < 0) break;\n      c = str.charCodeAt(_i13);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n\n    return byteArray;\n  }\n\n  function base64ToBytes(str) {\n    return base64.toByteArray(base64clean(str));\n  }\n\n  function blitBuffer(src, dst, offset, length) {\n    var i;\n\n    for (i = 0; i < length; ++i) {\n      if (i + offset >= dst.length || i >= src.length) break;\n      dst[i + offset] = src[i];\n    }\n\n    return i;\n  } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n  // the `instanceof` check but they should be treated as of that type.\n  // See: https://github.com/feross/buffer/issues/166\n\n\n  function isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n  }\n\n  function numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj; // eslint-disable-line no-self-compare\n  } // Create lookup table for `toString('hex')`\n  // See: https://github.com/feross/buffer/issues/219\n\n\n  var hexSliceLookupTable = function () {\n    var alphabet = '0123456789abcdef';\n    var table = new Array(256);\n\n    for (var _i14 = 0; _i14 < 16; ++_i14) {\n      var i16 = _i14 * 16;\n\n      for (var j = 0; j < 16; ++j) {\n        table[i16 + j] = alphabet[_i14] + alphabet[j];\n      }\n    }\n\n    return table;\n  }(); // Return not function with Error if BigInt not supported\n\n\n  function defineBigIntMethod(fn) {\n    return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;\n  }\n\n  function BufferBigIntNotDefined() {\n    throw new Error('BigInt not supported');\n  }\n})(buffer);\n\nvar global$1 = typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {};\nvar inherits;\n\nif (typeof Object.create === 'function') {\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n\nvar inherits$1 = inherits;\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\nfunction inspect$1(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n} // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\n\ninspect$1.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect$1.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect$1.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect$1.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect$1.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== inspect$1 && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function (prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n\n  return keys;\n};\n\nvar pSlice = Array.prototype.slice;\n\nvar _functionsHaveNames;\n\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n\n  return _functionsHaveNames = function () {\n    return function foo() {}.name === 'foo';\n  }();\n}\n\nfunction pToString(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isView(arrbuf) {\n  if (buffer.isBuffer(arrbuf)) {\n    return false;\n  }\n\n  if (typeof global$1.ArrayBuffer !== 'function') {\n    return false;\n  }\n\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n\n  if (!arrbuf) {\n    return false;\n  }\n\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n\n  return false;\n} // 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n} // 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/; // based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\n\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\n\nassert.AssertionError = AssertionError;\n\nfunction AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n\n  var stackStartFunction = options.stackStartFunction || fail;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n\n    if (err.stack) {\n      var out = err.stack; // try to strip useless frames\n\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n} // assert.AssertionError instanceof Error\n\n\ninherits$1(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\n\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return inspect$1(something);\n  }\n\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' + name + ']';\n}\n\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' + self.operator + ' ' + truncate(inspect(self.expected), 128);\n} // At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n} // EXTENSION! allows for well behaved errors defined elsewhere.\n\n\nassert.fail = fail; // 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\n\nassert.ok = ok; // 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = equal;\n\nfunction equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n} // 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\n\nassert.notEqual = notEqual;\n\nfunction notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n} // 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\n\nassert.deepEqual = deepEqual;\n\nfunction deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\n\nassert.deepStrictEqual = deepStrictEqual;\n\nfunction deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (buffer.isBuffer(actual) && buffer.isBuffer(expected)) {\n    return compare(actual, expected) === 0; // 7.2. If the expected value is a Date object, the actual value is\n    // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime(); // 7.3 If the expected value is a RegExp object, the actual value is\n    // equivalent if it is also a RegExp object with the same source and\n    // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source && actual.global === expected.global && actual.multiline === expected.multiline && actual.lastIndex === expected.lastIndex && actual.ignoreCase === expected.ignoreCase; // 7.4. Other pairs that do not both pass typeof value == 'object',\n    // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') && (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected; // If both values are instances of typed arrays, wrap their underlying\n    // ArrayBuffers in a Buffer each to increase performance\n    // This optimization requires the arrays to have the same type as checked by\n    // Object.prototype.toString (aka pToString). Never perform binary\n    // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n    // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) && pToString(actual) === pToString(expected) && !(actual instanceof Float32Array || actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer), new Uint8Array(expected.buffer)) === 0; // 7.5 For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical 'prototype' property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n  } else if (buffer.isBuffer(actual) !== buffer.isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {\n      actual: [],\n      expected: []\n    };\n    var actualIndex = memos.actual.indexOf(actual);\n\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined) return false; // if one is a primitive, the other must be same\n\n  if (isPrimitive(a) || isPrimitive(b)) return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if (aIsArgs && !bIsArgs || !aIsArgs && bIsArgs) return false;\n\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i; // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n\n  if (ka.length !== kb.length) return false; //the same set of keys (although not necessarily the same order),\n\n  ka.sort();\n  kb.sort(); //~~~cheap key test\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) return false;\n  } //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects)) return false;\n  }\n\n  return true;\n} // 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\n\nassert.notDeepEqual = notDeepEqual;\n\nfunction notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n} // 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\n\nassert.strictEqual = strictEqual;\n\nfunction strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n} // 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\n\nassert.notStrictEqual = notStrictEqual;\n\nfunction notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {// Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') + (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if (isUnwantedException && userProvidedMessage && expectedException(actual, expected) || isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if (shouldThrow && actual && expected && !expectedException(actual, expected) || !shouldThrow && actual) {\n    throw actual;\n  }\n} // 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\n\nassert.throws = throws;\n\nfunction throws(block,\n/*optional*/\nerror,\n/*optional*/\nmessage) {\n  _throws(true, block, error, message);\n} // EXTENSION! This is annoying to write outside this module.\n\n\nassert.doesNotThrow = doesNotThrow;\n\nfunction doesNotThrow(block,\n/*optional*/\nerror,\n/*optional*/\nmessage) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\n\nfunction ifError(err) {\n  if (err) throw err;\n}\n\nvar Layout$1 = {};\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\n\nvar Layout = /*#__PURE__*/function () {\n  function Layout(span, property) {\n    _classCallCheck(this, Layout);\n\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n\n\n    this.span = span;\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n\n    this.property = property;\n  }\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n\n\n  _createClass(Layout, [{\n    key: \"makeDestinationObject\",\n    value: function makeDestinationObject() {\n      return {};\n    }\n    /**\n     * Decode from a Buffer into an JavaScript value.\n     *\n     * @param {Buffer} b - the buffer from which encoded data is read.\n     *\n     * @param {Number} [offset] - the offset at which the encoded data\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @returns {(Number|Array|Object)} - the value of the decoded data.\n     *\n     * @abstract\n     */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      throw new Error('Layout is abstract');\n    }\n    /**\n     * Encode a JavaScript value into a Buffer.\n     *\n     * @param {(Number|Array|Object)} src - the value to be encoded into\n     * the buffer.  The type accepted depends on the (sub-)type of {@link\n     * Layout}.\n     *\n     * @param {Buffer} b - the buffer into which encoded data will be\n     * written.\n     *\n     * @param {Number} [offset] - the offset at which the encoded data\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @returns {Number} - the number of bytes encoded, including the\n     * space skipped for internal padding, but excluding data such as\n     * {@link Sequence#count|lengths} when stored {@link\n     * ExternalLayout|externally}.  This is the adjustment to `offset`\n     * producing the offset where data for the next layout would be\n     * written.\n     *\n     * @abstract\n     */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      throw new Error('Layout is abstract');\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Buffer} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n\n  }, {\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 > this.span) {\n        throw new RangeError('indeterminate span');\n      }\n\n      return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n\n  }, {\n    key: \"replicate\",\n    value: function replicate(property) {\n      var rv = Object.create(this.constructor.prototype);\n      Object.assign(rv, this);\n      rv.property = property;\n      return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(values) {\n      return undefined;\n    }\n  }]);\n\n  return Layout;\n}();\n\nLayout$1.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\n\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n\n  return name;\n}\n\nLayout$1.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n\n  if (!(layout && layout instanceof Layout)) {\n    throw new TypeError('layout must be a Layout');\n  }\n\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n\n  layout.makeDestinationObject = function () {\n    return new Class();\n  };\n\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function value(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function value(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true\n  });\n}\n\nLayout$1.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\n\nvar ExternalLayout = /*#__PURE__*/function (_Layout) {\n  _inherits(ExternalLayout, _Layout);\n\n  var _super2 = _createSuper(ExternalLayout);\n\n  function ExternalLayout() {\n    _classCallCheck(this, ExternalLayout);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ExternalLayout, [{\n    key: \"isCount\",\n    value:\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    function isCount() {\n      throw new Error('ExternalLayout is abstract');\n    }\n  }]);\n\n  return ExternalLayout;\n}(Layout);\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\n\n\nvar GreedyCount = /*#__PURE__*/function (_ExternalLayout) {\n  _inherits(GreedyCount, _ExternalLayout);\n\n  var _super3 = _createSuper(GreedyCount);\n\n  function GreedyCount(elementSpan, property) {\n    var _this2;\n\n    _classCallCheck(this, GreedyCount);\n\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n\n    if (!Number.isInteger(elementSpan) || 0 >= elementSpan) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n\n    _this2 = _super3.call(this, -1, property);\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n\n    _this2.elementSpan = elementSpan;\n    return _this2;\n  }\n  /** @override */\n\n\n  _createClass(GreedyCount, [{\n    key: \"isCount\",\n    value: function isCount() {\n      return true;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var rem = b.length - offset;\n      return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      return 0;\n    }\n  }]);\n\n  return GreedyCount;\n}(ExternalLayout);\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\n\n\nvar OffsetLayout = /*#__PURE__*/function (_ExternalLayout2) {\n  _inherits(OffsetLayout, _ExternalLayout2);\n\n  var _super4 = _createSuper(OffsetLayout);\n\n  function OffsetLayout(layout, offset, property) {\n    var _this3;\n\n    _classCallCheck(this, OffsetLayout);\n\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    _this3 = _super4.call(this, layout.span, property || layout.property);\n    /** The subordinated layout. */\n\n    _this3.layout = layout;\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n\n    _this3.offset = offset;\n    return _this3;\n  }\n  /** @override */\n\n\n  _createClass(OffsetLayout, [{\n    key: \"isCount\",\n    value: function isCount() {\n      return this.layout instanceof UInt || this.layout instanceof UIntBE;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return this.layout.encode(src, b, offset + this.offset);\n    }\n  }]);\n\n  return OffsetLayout;\n}(ExternalLayout);\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar UInt = /*#__PURE__*/function (_Layout2) {\n  _inherits(UInt, _Layout2);\n\n  var _super5 = _createSuper(UInt);\n\n  function UInt(span, property) {\n    var _this4;\n\n    _classCallCheck(this, UInt);\n\n    _this4 = _super5.call(this, span, property);\n\n    if (6 < _this4.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n\n    return _this4;\n  }\n  /** @override */\n\n\n  _createClass(UInt, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readUIntLE(offset, this.span);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeUIntLE(src, offset, this.span);\n      return this.span;\n    }\n  }]);\n\n  return UInt;\n}(Layout);\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar UIntBE = /*#__PURE__*/function (_Layout3) {\n  _inherits(UIntBE, _Layout3);\n\n  var _super6 = _createSuper(UIntBE);\n\n  function UIntBE(span, property) {\n    var _this5;\n\n    _classCallCheck(this, UIntBE);\n\n    _this5 = _super6.call(this, span, property);\n\n    if (6 < _this5.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n\n    return _this5;\n  }\n  /** @override */\n\n\n  _createClass(UIntBE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readUIntBE(offset, this.span);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeUIntBE(src, offset, this.span);\n      return this.span;\n    }\n  }]);\n\n  return UIntBE;\n}(Layout);\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Int = /*#__PURE__*/function (_Layout4) {\n  _inherits(Int, _Layout4);\n\n  var _super7 = _createSuper(Int);\n\n  function Int(span, property) {\n    var _this6;\n\n    _classCallCheck(this, Int);\n\n    _this6 = _super7.call(this, span, property);\n\n    if (6 < _this6.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n\n    return _this6;\n  }\n  /** @override */\n\n\n  _createClass(Int, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readIntLE(offset, this.span);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeIntLE(src, offset, this.span);\n      return this.span;\n    }\n  }]);\n\n  return Int;\n}(Layout);\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar IntBE = /*#__PURE__*/function (_Layout5) {\n  _inherits(IntBE, _Layout5);\n\n  var _super8 = _createSuper(IntBE);\n\n  function IntBE(span, property) {\n    var _this7;\n\n    _classCallCheck(this, IntBE);\n\n    _this7 = _super8.call(this, span, property);\n\n    if (6 < _this7.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n\n    return _this7;\n  }\n  /** @override */\n\n\n  _createClass(IntBE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readIntBE(offset, this.span);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeIntBE(src, offset, this.span);\n      return this.span;\n    }\n  }]);\n\n  return IntBE;\n}(Layout);\n\nvar V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\n\nfunction divmodInt64(src) {\n  var hi32 = Math.floor(src / V2E32);\n  var lo32 = src - hi32 * V2E32;\n  return {\n    hi32: hi32,\n    lo32: lo32\n  };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\n\n\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\n\n\nvar NearUInt64 = /*#__PURE__*/function (_Layout6) {\n  _inherits(NearUInt64, _Layout6);\n\n  var _super9 = _createSuper(NearUInt64);\n\n  function NearUInt64(property) {\n    _classCallCheck(this, NearUInt64);\n\n    return _super9.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(NearUInt64, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var lo32 = b.readUInt32LE(offset);\n      var hi32 = b.readUInt32LE(offset + 4);\n      return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var split = divmodInt64(src);\n      b.writeUInt32LE(split.lo32, offset);\n      b.writeUInt32LE(split.hi32, offset + 4);\n      return 8;\n    }\n  }]);\n\n  return NearUInt64;\n}(Layout);\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\n\n\nvar NearUInt64BE = /*#__PURE__*/function (_Layout7) {\n  _inherits(NearUInt64BE, _Layout7);\n\n  var _super10 = _createSuper(NearUInt64BE);\n\n  function NearUInt64BE(property) {\n    _classCallCheck(this, NearUInt64BE);\n\n    return _super10.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(NearUInt64BE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var hi32 = b.readUInt32BE(offset);\n      var lo32 = b.readUInt32BE(offset + 4);\n      return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var split = divmodInt64(src);\n      b.writeUInt32BE(split.hi32, offset);\n      b.writeUInt32BE(split.lo32, offset + 4);\n      return 8;\n    }\n  }]);\n\n  return NearUInt64BE;\n}(Layout);\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\n\n\nvar NearInt64 = /*#__PURE__*/function (_Layout8) {\n  _inherits(NearInt64, _Layout8);\n\n  var _super11 = _createSuper(NearInt64);\n\n  function NearInt64(property) {\n    _classCallCheck(this, NearInt64);\n\n    return _super11.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(NearInt64, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var lo32 = b.readUInt32LE(offset);\n      var hi32 = b.readInt32LE(offset + 4);\n      return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var split = divmodInt64(src);\n      b.writeUInt32LE(split.lo32, offset);\n      b.writeInt32LE(split.hi32, offset + 4);\n      return 8;\n    }\n  }]);\n\n  return NearInt64;\n}(Layout);\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\n\n\nvar NearInt64BE = /*#__PURE__*/function (_Layout9) {\n  _inherits(NearInt64BE, _Layout9);\n\n  var _super12 = _createSuper(NearInt64BE);\n\n  function NearInt64BE(property) {\n    _classCallCheck(this, NearInt64BE);\n\n    return _super12.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(NearInt64BE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var hi32 = b.readInt32BE(offset);\n      var lo32 = b.readUInt32BE(offset + 4);\n      return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var split = divmodInt64(src);\n      b.writeInt32BE(split.hi32, offset);\n      b.writeUInt32BE(split.lo32, offset + 4);\n      return 8;\n    }\n  }]);\n\n  return NearInt64BE;\n}(Layout);\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Float = /*#__PURE__*/function (_Layout10) {\n  _inherits(Float, _Layout10);\n\n  var _super13 = _createSuper(Float);\n\n  function Float(property) {\n    _classCallCheck(this, Float);\n\n    return _super13.call(this, 4, property);\n  }\n  /** @override */\n\n\n  _createClass(Float, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readFloatLE(offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeFloatLE(src, offset);\n      return 4;\n    }\n  }]);\n\n  return Float;\n}(Layout);\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar FloatBE = /*#__PURE__*/function (_Layout11) {\n  _inherits(FloatBE, _Layout11);\n\n  var _super14 = _createSuper(FloatBE);\n\n  function FloatBE(property) {\n    _classCallCheck(this, FloatBE);\n\n    return _super14.call(this, 4, property);\n  }\n  /** @override */\n\n\n  _createClass(FloatBE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readFloatBE(offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeFloatBE(src, offset);\n      return 4;\n    }\n  }]);\n\n  return FloatBE;\n}(Layout);\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Double = /*#__PURE__*/function (_Layout12) {\n  _inherits(Double, _Layout12);\n\n  var _super15 = _createSuper(Double);\n\n  function Double(property) {\n    _classCallCheck(this, Double);\n\n    return _super15.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(Double, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readDoubleLE(offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeDoubleLE(src, offset);\n      return 8;\n    }\n  }]);\n\n  return Double;\n}(Layout);\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar DoubleBE = /*#__PURE__*/function (_Layout13) {\n  _inherits(DoubleBE, _Layout13);\n\n  var _super16 = _createSuper(DoubleBE);\n\n  function DoubleBE(property) {\n    _classCallCheck(this, DoubleBE);\n\n    return _super16.call(this, 8, property);\n  }\n  /** @override */\n\n\n  _createClass(DoubleBE, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.readDoubleBE(offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      b.writeDoubleBE(src, offset);\n      return 8;\n    }\n  }]);\n\n  return DoubleBE;\n}(Layout);\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Sequence = /*#__PURE__*/function (_Layout14) {\n  _inherits(Sequence, _Layout14);\n\n  var _super17 = _createSuper(Sequence);\n\n  function Sequence(elementLayout, count, property) {\n    var _this8;\n\n    _classCallCheck(this, Sequence);\n\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n\n    if (!(count instanceof ExternalLayout && count.isCount() || Number.isInteger(count) && 0 <= count)) {\n      throw new TypeError('count must be non-negative integer ' + 'or an unsigned integer ExternalLayout');\n    }\n\n    var span = -1;\n\n    if (!(count instanceof ExternalLayout) && 0 < elementLayout.span) {\n      span = count * elementLayout.span;\n    }\n\n    _this8 = _super17.call(this, span, property);\n    /** The layout for individual elements of the sequence. */\n\n    _this8.elementLayout = elementLayout;\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n\n    _this8.count = count;\n    return _this8;\n  }\n  /** @override */\n\n\n  _createClass(Sequence, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 <= this.span) {\n        return this.span;\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = 0;\n      var count = this.count;\n\n      if (count instanceof ExternalLayout) {\n        count = count.decode(b, offset);\n      }\n\n      if (0 < this.elementLayout.span) {\n        span = count * this.elementLayout.span;\n      } else {\n        var idx = 0;\n\n        while (idx < count) {\n          span += this.elementLayout.getSpan(b, offset + span);\n          ++idx;\n        }\n      }\n\n      return span;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var rv = [];\n      var i = 0;\n      var count = this.count;\n\n      if (count instanceof ExternalLayout) {\n        count = count.decode(b, offset);\n      }\n\n      while (i < count) {\n        rv.push(this.elementLayout.decode(b, offset));\n        offset += this.elementLayout.getSpan(b, offset);\n        i += 1;\n      }\n\n      return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var elo = this.elementLayout;\n      var span = src.reduce(function (span, v) {\n        return span + elo.encode(v, b, offset + span);\n      }, 0);\n\n      if (this.count instanceof ExternalLayout) {\n        this.count.encode(src.length, b, offset);\n      }\n\n      return span;\n    }\n  }]);\n\n  return Sequence;\n}(Layout);\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\n\n\nvar Structure = /*#__PURE__*/function (_Layout15) {\n  _inherits(Structure, _Layout15);\n\n  var _super18 = _createSuper(Structure);\n\n  function Structure(fields, property, decodePrefixes) {\n    var _this9;\n\n    _classCallCheck(this, Structure);\n\n    if (!(Array.isArray(fields) && fields.reduce(function (acc, v) {\n      return acc && v instanceof Layout;\n    }, true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n\n    if ('boolean' === typeof property && undefined === decodePrefixes) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n    /* Verify absence of unnamed variable-length fields. */\n\n\n    var _iterator = _createForOfIteratorHelper(fields),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var fd = _step.value;\n\n        if (0 > fd.span && undefined === fd.property) {\n          throw new Error('fields cannot contain unnamed variable-length layout');\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var span = -1;\n\n    try {\n      span = fields.reduce(function (span, fd) {\n        return span + fd.getSpan();\n      }, 0);\n    } catch (e) {}\n\n    _this9 = _super18.call(this, span, property);\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n\n    _this9.fields = fields;\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n\n    _this9.decodePrefixes = !!decodePrefixes;\n    return _this9;\n  }\n  /** @override */\n\n\n  _createClass(Structure, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 <= this.span) {\n        return this.span;\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = 0;\n\n      try {\n        span = this.fields.reduce(function (span, fd) {\n          var fsp = fd.getSpan(b, offset);\n          offset += fsp;\n          return span + fsp;\n        }, 0);\n      } catch (e) {\n        throw new RangeError('indeterminate span');\n      }\n\n      return span;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var dest = this.makeDestinationObject();\n\n      var _iterator2 = _createForOfIteratorHelper(this.fields),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var fd = _step2.value;\n\n          if (undefined !== fd.property) {\n            dest[fd.property] = fd.decode(b, offset);\n          }\n\n          offset += fd.getSpan(b, offset);\n\n          if (this.decodePrefixes && b.length === offset) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var firstOffset = offset;\n      var lastOffset = 0;\n      var lastWrote = 0;\n\n      var _iterator3 = _createForOfIteratorHelper(this.fields),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var fd = _step3.value;\n          var span = fd.span;\n          lastWrote = 0 < span ? span : 0;\n\n          if (undefined !== fd.property) {\n            var fv = src[fd.property];\n\n            if (undefined !== fv) {\n              lastWrote = fd.encode(fv, b, offset);\n\n              if (0 > span) {\n                /* Read the as-encoded span, which is not necessarily the\n                 * same as what we wrote. */\n                span = fd.getSpan(b, offset);\n              }\n            }\n          }\n\n          lastOffset = offset;\n          offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return lastOffset + lastWrote - firstOffset;\n    }\n    /** @override */\n\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(values) {\n      var dest = this.makeDestinationObject();\n\n      var _iterator4 = _createForOfIteratorHelper(this.fields),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var fd = _step4.value;\n\n          if (undefined !== fd.property && 0 < values.length) {\n            dest[fd.property] = values.shift();\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n\n  }, {\n    key: \"layoutFor\",\n    value: function layoutFor(property) {\n      if ('string' !== typeof property) {\n        throw new TypeError('property must be string');\n      }\n\n      var _iterator5 = _createForOfIteratorHelper(this.fields),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var fd = _step5.value;\n\n          if (fd.property === property) {\n            return fd;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n\n  }, {\n    key: \"offsetOf\",\n    value: function offsetOf(property) {\n      if ('string' !== typeof property) {\n        throw new TypeError('property must be string');\n      }\n\n      var offset = 0;\n\n      var _iterator6 = _createForOfIteratorHelper(this.fields),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var fd = _step6.value;\n\n          if (fd.property === property) {\n            return offset;\n          }\n\n          if (0 > fd.span) {\n            offset = -1;\n          } else if (0 <= offset) {\n            offset += fd.span;\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }]);\n\n  return Structure;\n}(Layout);\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\n\n\nvar UnionDiscriminator = /*#__PURE__*/function () {\n  function UnionDiscriminator(property) {\n    _classCallCheck(this, UnionDiscriminator);\n\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n\n\n  _createClass(UnionDiscriminator, [{\n    key: \"decode\",\n    value: function decode() {\n      throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n\n  }, {\n    key: \"encode\",\n    value: function encode() {\n      throw new Error('UnionDiscriminator is abstract');\n    }\n  }]);\n\n  return UnionDiscriminator;\n}();\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\n\n\nvar UnionLayoutDiscriminator = /*#__PURE__*/function (_UnionDiscriminator) {\n  _inherits(UnionLayoutDiscriminator, _UnionDiscriminator);\n\n  var _super19 = _createSuper(UnionLayoutDiscriminator);\n\n  function UnionLayoutDiscriminator(layout, property) {\n    var _this10;\n\n    _classCallCheck(this, UnionLayoutDiscriminator);\n\n    if (!(layout instanceof ExternalLayout && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    _this10 = _super19.call(this, property || layout.property || 'variant');\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n\n    _this10.layout = layout;\n    return _this10;\n  }\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n\n\n  _createClass(UnionLayoutDiscriminator, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      return this.layout.encode(src, b, offset);\n    }\n  }]);\n\n  return UnionLayoutDiscriminator;\n}(UnionDiscriminator);\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Union = /*#__PURE__*/function (_Layout16) {\n  _inherits(Union, _Layout16);\n\n  var _super20 = _createSuper(Union);\n\n  function Union(discr, defaultLayout, property) {\n    var _this11;\n\n    _classCallCheck(this, Union);\n\n    var upv = discr instanceof UInt || discr instanceof UIntBE;\n\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if (discr instanceof ExternalLayout && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator ' + 'or an unsigned integer layout');\n    }\n\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n\n    if (!(null === defaultLayout || defaultLayout instanceof Layout)) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n\n\n    var span = -1;\n\n    if (defaultLayout) {\n      span = defaultLayout.span;\n\n      if (0 <= span && upv) {\n        span += discr.layout.span;\n      }\n    }\n\n    _this11 = _super20.call(this, span, property);\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n\n    _this11.discriminator = discr;\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n\n    _this11.usesPrefixDiscriminator = upv;\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n\n    _this11.defaultLayout = defaultLayout;\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n\n    _this11.registry = {};\n    /* Private variable used when invoking getSourceVariant */\n\n    var boundGetSourceVariant = _this11.defaultGetSourceVariant.bind(_assertThisInitialized(_this11));\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n\n\n    _this11.getSourceVariant = function (src) {\n      return boundGetSourceVariant(src);\n    };\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n\n\n    _this11.configGetSourceVariant = function (gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n\n    return _this11;\n  }\n  /** @override */\n\n\n  _createClass(Union, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 <= this.span) {\n        return this.span;\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n      /* Default layouts always have non-negative span, so we don't have\n       * one and we have to recognize the variant which will in turn\n       * determine the span. */\n\n\n      var vlo = this.getVariant(b, offset);\n\n      if (!vlo) {\n        throw new Error('unable to determine span for unrecognized variant');\n      }\n\n      return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisified rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n\n  }, {\n    key: \"defaultGetSourceVariant\",\n    value: function defaultGetSourceVariant(src) {\n      if (src.hasOwnProperty(this.discriminator.property)) {\n        if (this.defaultLayout && src.hasOwnProperty(this.defaultLayout.property)) {\n          return undefined;\n        }\n\n        var vlo = this.registry[src[this.discriminator.property]];\n\n        if (vlo && (!vlo.layout || src.hasOwnProperty(vlo.property))) {\n          return vlo;\n        }\n      } else {\n        for (var tag in this.registry) {\n          var _vlo = this.registry[tag];\n\n          if (src.hasOwnProperty(_vlo.property)) {\n            return _vlo;\n          }\n        }\n      }\n\n      throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var dest;\n      var dlo = this.discriminator;\n      var discr = dlo.decode(b, offset);\n      var clo = this.registry[discr];\n\n      if (undefined === clo) {\n        var contentOffset = 0;\n        clo = this.defaultLayout;\n\n        if (this.usesPrefixDiscriminator) {\n          contentOffset = dlo.layout.span;\n        }\n\n        dest = this.makeDestinationObject();\n        dest[dlo.property] = discr;\n        dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n      } else {\n        dest = clo.decode(b, offset);\n      }\n\n      return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var vlo = this.getSourceVariant(src);\n\n      if (undefined === vlo) {\n        var dlo = this.discriminator;\n        var clo = this.defaultLayout;\n        var contentOffset = 0;\n\n        if (this.usesPrefixDiscriminator) {\n          contentOffset = dlo.layout.span;\n        }\n\n        dlo.encode(src[dlo.property], b, offset);\n        return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n      }\n\n      return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n\n  }, {\n    key: \"addVariant\",\n    value: function addVariant(variant, layout, property) {\n      var rv = new VariantLayout(this, variant, layout, property);\n      this.registry[variant] = rv;\n      return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Buffer)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Buffer}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n\n  }, {\n    key: \"getVariant\",\n    value: function getVariant(vb, offset) {\n      var variant = vb;\n\n      if (buffer.Buffer.isBuffer(vb)) {\n        if (undefined === offset) {\n          offset = 0;\n        }\n\n        variant = this.discriminator.decode(vb, offset);\n      }\n\n      return this.registry[variant];\n    }\n  }]);\n\n  return Union;\n}(Layout);\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\n\n\nvar VariantLayout = /*#__PURE__*/function (_Layout17) {\n  _inherits(VariantLayout, _Layout17);\n\n  var _super21 = _createSuper(VariantLayout);\n\n  function VariantLayout(union, variant, layout, property) {\n    var _this12;\n\n    _classCallCheck(this, VariantLayout);\n\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n\n    if (!Number.isInteger(variant) || 0 > variant) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n\n    if ('string' === typeof layout && undefined === property) {\n      property = layout;\n      layout = null;\n    }\n\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n\n      if (null !== union.defaultLayout && 0 <= layout.span && layout.span > union.defaultLayout.span) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n\n    var span = union.span;\n\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n\n      if (0 <= span && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n\n    _this12 = _super21.call(this, span, property);\n    /** The {@link Union} to which this variant belongs. */\n\n    _this12.union = union;\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n\n    _this12.variant = variant;\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n\n    _this12.layout = layout || null;\n    return _this12;\n  }\n  /** @override */\n\n\n  _createClass(VariantLayout, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (0 <= this.span) {\n        /* Will be equal to the containing union span if that is not\n         * variable. */\n        return this.span;\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var contentOffset = 0;\n\n      if (this.union.usesPrefixDiscriminator) {\n        contentOffset = this.union.discriminator.layout.span;\n      }\n      /* Span is defined solely by the variant (and prefix discriminator) */\n\n\n      return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      var dest = this.makeDestinationObject();\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      if (this !== this.union.getVariant(b, offset)) {\n        throw new Error('variant mismatch');\n      }\n\n      var contentOffset = 0;\n\n      if (this.union.usesPrefixDiscriminator) {\n        contentOffset = this.union.discriminator.layout.span;\n      }\n\n      if (this.layout) {\n        dest[this.property] = this.layout.decode(b, offset + contentOffset);\n      } else if (this.property) {\n        dest[this.property] = true;\n      } else if (this.union.usesPrefixDiscriminator) {\n        dest[this.union.discriminator.property] = this.variant;\n      }\n\n      return dest;\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var contentOffset = 0;\n\n      if (this.union.usesPrefixDiscriminator) {\n        contentOffset = this.union.discriminator.layout.span;\n      }\n\n      if (this.layout && !src.hasOwnProperty(this.property)) {\n        throw new TypeError('variant lacks property ' + this.property);\n      }\n\n      this.union.discriminator.encode(this.variant, b, offset);\n      var span = contentOffset;\n\n      if (this.layout) {\n        this.layout.encode(src[this.property], b, offset + contentOffset);\n        span += this.layout.getSpan(b, offset + contentOffset);\n\n        if (0 <= this.union.span && span > this.union.span) {\n          throw new Error('encoded variant overruns containing union');\n        }\n      }\n\n      return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(values) {\n      if (this.layout) {\n        return this.layout.fromArray(values);\n      }\n    }\n  }]);\n\n  return VariantLayout;\n}(Layout);\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\n\n\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n\n  return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar BitStructure = /*#__PURE__*/function (_Layout18) {\n  _inherits(BitStructure, _Layout18);\n\n  var _super22 = _createSuper(BitStructure);\n\n  function BitStructure(word, msb, property) {\n    var _this13;\n\n    _classCallCheck(this, BitStructure);\n\n    if (!(word instanceof UInt || word instanceof UIntBE)) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n\n    if ('string' === typeof msb && undefined === property) {\n      property = msb;\n      msb = undefined;\n    }\n\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n\n    _this13 = _super22.call(this, word.span, property);\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n\n    _this13.word = word;\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n\n    _this13.msb = !!msb;\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n\n    _this13.fields = [];\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n\n    var value = 0;\n\n    _this13._packedSetValue = function (v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n\n    _this13._packedGetValue = function () {\n      return value;\n    };\n\n    return _this13;\n  }\n  /** @override */\n\n\n  _createClass(BitStructure, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      var dest = this.makeDestinationObject();\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var value = this.word.decode(b, offset);\n\n      this._packedSetValue(value);\n\n      var _iterator7 = _createForOfIteratorHelper(this.fields),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var fd = _step7.value;\n\n          if (undefined !== fd.property) {\n            dest[fd.property] = fd.decode(value);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var value = this.word.decode(b, offset);\n\n      this._packedSetValue(value);\n\n      var _iterator8 = _createForOfIteratorHelper(this.fields),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var fd = _step8.value;\n\n          if (undefined !== fd.property) {\n            var fv = src[fd.property];\n\n            if (undefined !== fv) {\n              fd.encode(fv);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n\n  }, {\n    key: \"addField\",\n    value: function addField(bits, property) {\n      var bf = new BitField(this, bits, property);\n      this.fields.push(bf);\n      return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n\n  }, {\n    key: \"addBoolean\",\n    value: function addBoolean(property) {\n      // This is my Boolean, not the Javascript one.\n      // eslint-disable-next-line no-new-wrappers\n      var bf = new Boolean(this, property);\n      this.fields.push(bf);\n      return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n\n  }, {\n    key: \"fieldFor\",\n    value: function fieldFor(property) {\n      if ('string' !== typeof property) {\n        throw new TypeError('property must be string');\n      }\n\n      var _iterator9 = _createForOfIteratorHelper(this.fields),\n          _step9;\n\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var fd = _step9.value;\n\n          if (fd.property === property) {\n            return fd;\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n    }\n  }]);\n\n  return BitStructure;\n}(Layout);\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\n\n\nvar BitField = /*#__PURE__*/function () {\n  function BitField(container, bits, property) {\n    _classCallCheck(this, BitField);\n\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n\n    if (!Number.isInteger(bits) || 0 >= bits) {\n      throw new TypeError('bits must be positive integer');\n    }\n\n    var totalBits = 8 * container.span;\n    var usedBits = container.fields.reduce(function (sum, fd) {\n      return sum + fd.bits;\n    }, 0);\n\n    if (bits + usedBits > totalBits) {\n      throw new Error('bits too long for span remainder (' + (totalBits - usedBits) + ' of ' + totalBits + ' remain)');\n    }\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n\n\n    this.container = container;\n    /** The span of this value in bits. */\n\n    this.bits = bits;\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n\n    this.valueMask = (1 << bits) - 1;\n\n    if (32 === bits) {\n      // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n\n\n    this.start = usedBits;\n\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n\n\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n\n    this.property = property;\n  }\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n\n\n  _createClass(BitField, [{\n    key: \"decode\",\n    value: function decode() {\n      var word = this.container._packedGetValue();\n\n      var wordValue = fixBitwiseResult(word & this.wordMask);\n      var value = wordValue >>> this.start;\n      return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(value) {\n      if (!Number.isInteger(value) || value !== fixBitwiseResult(value & this.valueMask)) {\n        throw new TypeError(nameWithProperty('BitField.encode', this) + ' value must be integer not exceeding ' + this.valueMask);\n      }\n\n      var word = this.container._packedGetValue();\n\n      var wordValue = fixBitwiseResult(value << this.start);\n\n      this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask) | wordValue);\n    }\n  }]);\n\n  return BitField;\n}();\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n\n/* eslint-disable no-extend-native */\n\n\nvar Boolean = /*#__PURE__*/function (_BitField) {\n  _inherits(Boolean, _BitField);\n\n  var _super23 = _createSuper(Boolean);\n\n  function Boolean(container, property) {\n    _classCallCheck(this, Boolean);\n\n    return _super23.call(this, container, 1, property);\n  }\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n\n\n  _createClass(Boolean, [{\n    key: \"decode\",\n    value: function decode(b, offset) {\n      return !!BitField.prototype.decode.call(this, b, offset);\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(value) {\n      if ('boolean' === typeof value) {\n        // BitField requires integer values\n        value = +value;\n      }\n\n      return BitField.prototype.encode.call(this, value);\n    }\n  }]);\n\n  return Boolean;\n}(BitField);\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Blob = /*#__PURE__*/function (_Layout19) {\n  _inherits(Blob, _Layout19);\n\n  var _super24 = _createSuper(Blob);\n\n  function Blob(length, property) {\n    var _this14;\n\n    _classCallCheck(this, Blob);\n\n    if (!(length instanceof ExternalLayout && length.isCount() || Number.isInteger(length) && 0 <= length)) {\n      throw new TypeError('length must be positive integer ' + 'or an unsigned integer ExternalLayout');\n    }\n\n    var span = -1;\n\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n\n    _this14 = _super24.call(this, span, property);\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n\n    _this14.length = length;\n    return _this14;\n  }\n  /** @override */\n\n\n  _createClass(Blob, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      var span = this.span;\n\n      if (0 > span) {\n        span = this.length.decode(b, offset);\n      }\n\n      return span;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = this.span;\n\n      if (0 > span) {\n        span = this.length.decode(b, offset);\n      }\n\n      return b.slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      var span = this.length;\n\n      if (this.length instanceof ExternalLayout) {\n        span = src.length;\n      }\n\n      if (!(buffer.Buffer.isBuffer(src) && span === src.length)) {\n        throw new TypeError(nameWithProperty('Blob.encode', this) + ' requires (length ' + span + ') Buffer as src');\n      }\n\n      if (offset + span > b.length) {\n        throw new RangeError('encoding overruns Buffer');\n      }\n\n      b.write(src.toString('hex'), offset, span, 'hex');\n\n      if (this.length instanceof ExternalLayout) {\n        this.length.encode(span, b, offset);\n      }\n\n      return span;\n    }\n  }]);\n\n  return Blob;\n}(Layout);\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar CString = /*#__PURE__*/function (_Layout20) {\n  _inherits(CString, _Layout20);\n\n  var _super25 = _createSuper(CString);\n\n  function CString(property) {\n    _classCallCheck(this, CString);\n\n    return _super25.call(this, -1, property);\n  }\n  /** @override */\n\n\n  _createClass(CString, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (!buffer.Buffer.isBuffer(b)) {\n        throw new TypeError('b must be a Buffer');\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var idx = offset;\n\n      while (idx < b.length && 0 !== b[idx]) {\n        idx += 1;\n      }\n\n      return 1 + idx - offset;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset, dest) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = this.getSpan(b, offset);\n      return b.slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      /* Must force this to a string, lest it be a number and the\n       * \"utf8-encoding\" below actually allocate a buffer of length\n       * src */\n\n\n      if ('string' !== typeof src) {\n        src = src.toString();\n      }\n\n      var srcb = new buffer.Buffer(src, 'utf8');\n      var span = srcb.length;\n\n      if (offset + span > b.length) {\n        throw new RangeError('encoding overruns Buffer');\n      }\n\n      srcb.copy(b, offset);\n      b[offset + span] = 0;\n      return span + 1;\n    }\n  }]);\n\n  return CString;\n}(Layout);\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar UTF8 = /*#__PURE__*/function (_Layout21) {\n  _inherits(UTF8, _Layout21);\n\n  var _super26 = _createSuper(UTF8);\n\n  function UTF8(maxSpan, property) {\n    var _this15;\n\n    _classCallCheck(this, UTF8);\n\n    if ('string' === typeof maxSpan && undefined === property) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    _this15 = _super26.call(this, -1, property);\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n\n    _this15.maxSpan = maxSpan;\n    return _this15;\n  }\n  /** @override */\n\n\n  _createClass(UTF8, [{\n    key: \"getSpan\",\n    value: function getSpan(b, offset) {\n      if (!buffer.Buffer.isBuffer(b)) {\n        throw new TypeError('b must be a Buffer');\n      }\n\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      return b.length - offset;\n    }\n    /** @override */\n\n  }, {\n    key: \"decode\",\n    value: function decode(b, offset, dest) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n\n      var span = this.getSpan(b, offset);\n\n      if (0 <= this.maxSpan && this.maxSpan < span) {\n        throw new RangeError('text length exceeds maxSpan');\n      }\n\n      return b.slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      /* Must force this to a string, lest it be a number and the\n       * \"utf8-encoding\" below actually allocate a buffer of length\n       * src */\n\n\n      if ('string' !== typeof src) {\n        src = src.toString();\n      }\n\n      var srcb = new buffer.Buffer(src, 'utf8');\n      var span = srcb.length;\n\n      if (0 <= this.maxSpan && this.maxSpan < span) {\n        throw new RangeError('text length exceeds maxSpan');\n      }\n\n      if (offset + span > b.length) {\n        throw new RangeError('encoding overruns Buffer');\n      }\n\n      srcb.copy(b, offset);\n      return span;\n    }\n  }]);\n\n  return UTF8;\n}(Layout);\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\n\n\nvar Constant = /*#__PURE__*/function (_Layout22) {\n  _inherits(Constant, _Layout22);\n\n  var _super27 = _createSuper(Constant);\n\n  function Constant(value, property) {\n    var _this16;\n\n    _classCallCheck(this, Constant);\n\n    _this16 = _super27.call(this, 0, property);\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n\n    _this16.value = value;\n    return _this16;\n  }\n  /** @override */\n\n\n  _createClass(Constant, [{\n    key: \"decode\",\n    value: function decode(b, offset, dest) {\n      return this.value;\n    }\n    /** @override */\n\n  }, {\n    key: \"encode\",\n    value: function encode(src, b, offset) {\n      /* Constants take no space */\n      return 0;\n    }\n  }]);\n\n  return Constant;\n}(Layout);\n\nLayout$1.ExternalLayout = ExternalLayout;\nLayout$1.GreedyCount = GreedyCount;\nLayout$1.OffsetLayout = OffsetLayout;\nLayout$1.UInt = UInt;\nLayout$1.UIntBE = UIntBE;\nLayout$1.Int = Int;\nLayout$1.IntBE = IntBE;\nLayout$1.Float = Float;\nLayout$1.FloatBE = FloatBE;\nLayout$1.Double = Double;\nLayout$1.DoubleBE = DoubleBE;\nLayout$1.Sequence = Sequence;\nLayout$1.Structure = Structure;\nLayout$1.UnionDiscriminator = UnionDiscriminator;\nLayout$1.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nLayout$1.Union = Union;\nLayout$1.VariantLayout = VariantLayout;\nLayout$1.BitStructure = BitStructure;\nLayout$1.BitField = BitField;\nLayout$1.Boolean = Boolean;\nLayout$1.Blob = Blob;\nLayout$1.CString = CString;\nLayout$1.UTF8 = UTF8;\nLayout$1.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\n\nLayout$1.greedy = function (elementSpan, property) {\n  return new GreedyCount(elementSpan, property);\n};\n/** Factory for {@link OffsetLayout}. */\n\n\nLayout$1.offset = function (layout, offset, property) {\n  return new OffsetLayout(layout, offset, property);\n};\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\n\n\nvar u8 = Layout$1.u8 = function (property) {\n  return new UInt(1, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\n\n\nLayout$1.u16 = function (property) {\n  return new UInt(2, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\n\n\nLayout$1.u24 = function (property) {\n  return new UInt(3, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\n\n\nvar u32 = Layout$1.u32 = function (property) {\n  return new UInt(4, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\n\n\nLayout$1.u40 = function (property) {\n  return new UInt(5, property);\n};\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\n\n\nLayout$1.u48 = function (property) {\n  return new UInt(6, property);\n};\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\n\n\nLayout$1.nu64 = function (property) {\n  return new NearUInt64(property);\n};\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\n\n\nLayout$1.u16be = function (property) {\n  return new UIntBE(2, property);\n};\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\n\n\nLayout$1.u24be = function (property) {\n  return new UIntBE(3, property);\n};\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\n\n\nLayout$1.u32be = function (property) {\n  return new UIntBE(4, property);\n};\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\n\n\nLayout$1.u40be = function (property) {\n  return new UIntBE(5, property);\n};\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\n\n\nLayout$1.u48be = function (property) {\n  return new UIntBE(6, property);\n};\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\n\n\nLayout$1.nu64be = function (property) {\n  return new NearUInt64BE(property);\n};\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\n\n\nLayout$1.s8 = function (property) {\n  return new Int(1, property);\n};\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\n\n\nLayout$1.s16 = function (property) {\n  return new Int(2, property);\n};\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\n\n\nLayout$1.s24 = function (property) {\n  return new Int(3, property);\n};\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\n\n\nLayout$1.s32 = function (property) {\n  return new Int(4, property);\n};\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\n\n\nLayout$1.s40 = function (property) {\n  return new Int(5, property);\n};\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\n\n\nLayout$1.s48 = function (property) {\n  return new Int(6, property);\n};\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\n\n\nLayout$1.ns64 = function (property) {\n  return new NearInt64(property);\n};\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\n\n\nLayout$1.s16be = function (property) {\n  return new IntBE(2, property);\n};\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\n\n\nLayout$1.s24be = function (property) {\n  return new IntBE(3, property);\n};\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\n\n\nLayout$1.s32be = function (property) {\n  return new IntBE(4, property);\n};\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\n\n\nLayout$1.s40be = function (property) {\n  return new IntBE(5, property);\n};\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\n\n\nLayout$1.s48be = function (property) {\n  return new IntBE(6, property);\n};\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\n\n\nLayout$1.ns64be = function (property) {\n  return new NearInt64BE(property);\n};\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\n\n\nLayout$1.f32 = function (property) {\n  return new Float(property);\n};\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\n\n\nLayout$1.f32be = function (property) {\n  return new FloatBE(property);\n};\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\n\n\nLayout$1.f64 = function (property) {\n  return new Double(property);\n};\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\n\n\nLayout$1.f64be = function (property) {\n  return new DoubleBE(property);\n};\n/** Factory for {@link Structure} values. */\n\n\nvar struct = Layout$1.struct = function (fields, property, decodePrefixes) {\n  return new Structure(fields, property, decodePrefixes);\n};\n/** Factory for {@link BitStructure} values. */\n\n\nLayout$1.bits = function (word, msb, property) {\n  return new BitStructure(word, msb, property);\n};\n/** Factory for {@link Sequence} values. */\n\n\nLayout$1.seq = function (elementLayout, count, property) {\n  return new Sequence(elementLayout, count, property);\n};\n/** Factory for {@link Union} values. */\n\n\nLayout$1.union = function (discr, defaultLayout, property) {\n  return new Union(discr, defaultLayout, property);\n};\n/** Factory for {@link UnionLayoutDiscriminator} values. */\n\n\nLayout$1.unionLayoutDiscriminator = function (layout, property) {\n  return new UnionLayoutDiscriminator(layout, property);\n};\n/** Factory for {@link Blob} values. */\n\n\nvar blob = Layout$1.blob = function (length, property) {\n  return new Blob(length, property);\n};\n/** Factory for {@link CString} values. */\n\n\nLayout$1.cstr = function (property) {\n  return new CString(property);\n};\n/** Factory for {@link UTF8} values. */\n\n\nLayout$1.utf8 = function (maxSpan, property) {\n  return new UTF8(maxSpan, property);\n};\n/** Factory for {@link Constant} values. */\n\n\nLayout$1.const = function (value, property) {\n  return new Constant(value, property);\n}; //      \n\n/**\n * Layout for a public key\n */\n\n\nvar publicKey = function publicKey() {\n  var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'publicKey';\n  return blob(32, property);\n};\n/**\n * Layout for a 64bit unsigned value\n */\n\n\nvar uint64 = function uint64() {\n  var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'uint64';\n  return blob(8, property);\n}; //      \n\n\nfunction sendAndConfirmTransaction(title, connection, transaction) {\n  for (var _len4 = arguments.length, signers = new Array(_len4 > 3 ? _len4 - 3 : 0), _key = 3; _key < _len4; _key++) {\n    signers[_key - 3] = arguments[_key];\n  }\n\n  return sendAndConfirmTransaction$1(connection, transaction, signers, {\n    skipPreflight: false\n  });\n}\n\nvar TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\nvar ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\nvar FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nvar INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\n\nfunction pubkeyToBuffer(publicKey) {\n  return buffer.Buffer.from(publicKey.toBuffer());\n}\n/**\n * 64-bit value\n */\n\n\nvar u64 = /*#__PURE__*/function (_BN) {\n  _inherits(u64, _BN);\n\n  var _super28 = _createSuper(u64);\n\n  function u64() {\n    _classCallCheck(this, u64);\n\n    return _super28.apply(this, arguments);\n  }\n\n  _createClass(u64, [{\n    key: \"toBuffer\",\n    value:\n    /**\n     * Convert to Buffer representation\n     */\n    function toBuffer() {\n      var a = _get(_getPrototypeOf(u64.prototype), \"toArray\", this).call(this).reverse();\n\n      var b = buffer.Buffer.from(a);\n\n      if (b.length === 8) {\n        return b;\n      }\n\n      assert(b.length < 8, 'u64 too large');\n      var zeroPad = buffer.Buffer.alloc(8);\n      b.copy(zeroPad);\n      return zeroPad;\n    }\n    /**\n     * Construct a u64 from Buffer representation\n     */\n\n  }], [{\n    key: \"fromBuffer\",\n    value: function fromBuffer(buffer) {\n      assert(buffer.length === 8, \"Invalid buffer length: \".concat(buffer.length));\n      return new u64(_toConsumableArray(buffer).reverse().map(function (i) {\n        return \"00\".concat(i.toString(16)).slice(-2);\n      }).join(''), 16);\n    }\n  }]);\n\n  return u64;\n}(BN);\n\nfunction isAccount(accountOrPublicKey) {\n  return 'publicKey' in accountOrPublicKey;\n}\n\nvar AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3\n}; // The address of the special mint for wrapped native token.\n\nvar NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/**\n * Information about the mint\n */\n\nvar MintLayout = struct([u32('mintAuthorityOption'), publicKey('mintAuthority'), uint64('supply'), u8('decimals'), u8('isInitialized'), u32('freezeAuthorityOption'), publicKey('freezeAuthority')]);\n/**\n * Information about an account\n */\n\n/**\n * @private\n */\n\nvar AccountLayout = struct([publicKey('mint'), publicKey('owner'), uint64('amount'), u32('delegateOption'), publicKey('delegate'), u8('state'), u32('isNativeOption'), uint64('isNative'), uint64('delegatedAmount'), u32('closeAuthorityOption'), publicKey('closeAuthority')]);\n/**\n * Information about an multisig\n */\n\n/**\n * @private\n */\n\nvar MultisigLayout = struct([u8('m'), u8('n'), u8('is_initialized'), publicKey('signer1'), publicKey('signer2'), publicKey('signer3'), publicKey('signer4'), publicKey('signer5'), publicKey('signer6'), publicKey('signer7'), publicKey('signer8'), publicKey('signer9'), publicKey('signer10'), publicKey('signer11')]);\n/**\n * An ERC20-like Token\n */\n\nvar Token = /*#__PURE__*/function () {\n  /**\n   * @private\n   */\n\n  /**\n   * The public key identifying this mint\n   */\n\n  /**\n   * Program Identifier for the Token program\n   */\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n\n  /**\n   * Fee payer\n   */\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  function Token(connection, publicKey, programId, payer) {\n    _classCallCheck(this, Token);\n\n    _defineProperty(this, \"connection\", void 0);\n\n    _defineProperty(this, \"publicKey\", void 0);\n\n    _defineProperty(this, \"programId\", void 0);\n\n    _defineProperty(this, \"associatedProgramId\", void 0);\n\n    _defineProperty(this, \"payer\", void 0);\n\n    Object.assign(this, {\n      connection: connection,\n      publicKey: publicKey,\n      programId: programId,\n      payer: payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID\n    });\n  }\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n\n\n  _createClass(Token, [{\n    key: \"createAccount\",\n    value:\n    /**\n     * Create and initialize a new account.\n     *\n     * This account may then be used as a `transfer()` or `approve()` destination\n     *\n     * @param owner User account that will own the new account\n     * @return Public key of the new empty account\n     */\n    function () {\n      var _createAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(owner) {\n        var balanceNeeded, newAccount, transaction, mintPublicKey;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Token.getMinBalanceRentForExemptAccount(this.connection);\n\n              case 2:\n                balanceNeeded = _context.sent;\n                newAccount = Keypair.generate();\n                transaction = new Transaction();\n                transaction.add(SystemProgram.createAccount({\n                  fromPubkey: this.payer.publicKey,\n                  newAccountPubkey: newAccount.publicKey,\n                  lamports: balanceNeeded,\n                  space: AccountLayout.span,\n                  programId: this.programId\n                }));\n                mintPublicKey = this.publicKey;\n                transaction.add(Token.createInitAccountInstruction(this.programId, mintPublicKey, newAccount.publicKey, owner)); // Send the two instructions\n\n                _context.next = 10;\n                return sendAndConfirmTransaction('createAccount and InitializeAccount', this.connection, transaction, this.payer, newAccount);\n\n              case 10:\n                return _context.abrupt(\"return\", newAccount.publicKey);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createAccount(_x) {\n        return _createAccount.apply(this, arguments);\n      }\n\n      return createAccount;\n    }()\n    /**\n     * Create and initialize the associated account.\n     *\n     * This account may then be used as a `transfer()` or `approve()` destination\n     *\n     * @param owner User account that will own the new account\n     * @return Public key of the new associated account\n     */\n\n  }, {\n    key: \"createAssociatedTokenAccount\",\n    value: function () {\n      var _createAssociatedTokenAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(owner) {\n        var associatedAddress;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Token.getAssociatedTokenAddress(this.associatedProgramId, this.programId, this.publicKey, owner);\n\n              case 2:\n                associatedAddress = _context2.sent;\n                return _context2.abrupt(\"return\", this.createAssociatedTokenAccountInternal(owner, associatedAddress));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function createAssociatedTokenAccount(_x2) {\n        return _createAssociatedTokenAccount.apply(this, arguments);\n      }\n\n      return createAssociatedTokenAccount;\n    }()\n  }, {\n    key: \"createAssociatedTokenAccountInternal\",\n    value: function () {\n      var _createAssociatedTokenAccountInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(owner, associatedAddress) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return sendAndConfirmTransaction('CreateAssociatedTokenAccount', this.connection, new Transaction().add(Token.createAssociatedTokenAccountInstruction(this.associatedProgramId, this.programId, this.publicKey, associatedAddress, owner, this.payer.publicKey)), this.payer);\n\n              case 2:\n                return _context3.abrupt(\"return\", associatedAddress);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function createAssociatedTokenAccountInternal(_x3, _x4) {\n        return _createAssociatedTokenAccountInternal.apply(this, arguments);\n      }\n\n      return createAssociatedTokenAccountInternal;\n    }()\n    /**\n     * Retrieve the associated account or create one if not found.\n     *\n     * This account may then be used as a `transfer()` or `approve()` destination\n     *\n     * @param owner User account that will own the new account\n     * @return The new associated account\n     */\n\n  }, {\n    key: \"getOrCreateAssociatedAccountInfo\",\n    value: function () {\n      var _getOrCreateAssociatedAccountInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(owner) {\n        var associatedAddress;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Token.getAssociatedTokenAddress(this.associatedProgramId, this.programId, this.publicKey, owner);\n\n              case 2:\n                associatedAddress = _context4.sent;\n                _context4.prev = 3;\n                _context4.next = 6;\n                return this.getAccountInfo(associatedAddress);\n\n              case 6:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](3);\n\n                if (!(_context4.t0.message === FAILED_TO_FIND_ACCOUNT || _context4.t0.message === INVALID_ACCOUNT_OWNER)) {\n                  _context4.next = 24;\n                  break;\n                }\n\n                _context4.prev = 12;\n                _context4.next = 15;\n                return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n\n              case 15:\n                _context4.next = 19;\n                break;\n\n              case 17:\n                _context4.prev = 17;\n                _context4.t1 = _context4[\"catch\"](12);\n\n              case 19:\n                _context4.next = 21;\n                return this.getAccountInfo(associatedAddress);\n\n              case 21:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 24:\n                throw _context4.t0;\n\n              case 25:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[3, 9], [12, 17]]);\n      }));\n\n      function getOrCreateAssociatedAccountInfo(_x5) {\n        return _getOrCreateAssociatedAccountInfo.apply(this, arguments);\n      }\n\n      return getOrCreateAssociatedAccountInfo;\n    }()\n    /**\n     * Create and initialize a new account on the special native token mint.\n     *\n     * In order to be wrapped, the account must have a balance of native tokens\n     * when it is initialized with the token program.\n     *\n     * This function sends lamports to the new account before initializing it.\n     *\n     * @param connection A solana web3 connection\n     * @param programId The token program ID\n     * @param owner The owner of the new token account\n     * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n     * @param amount The amount of lamports to wrap\n     * @return {Promise<PublicKey>} The new token account\n     */\n\n  }, {\n    key: \"createMultisig\",\n    value:\n    /**\n     * Create and initialize a new multisig.\n     *\n     * This account may then be used for multisignature verification\n     *\n     * @param m Number of required signatures\n     * @param signers Full set of signers\n     * @return Public key of the new multisig account\n     */\n    function () {\n      var _createMultisig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(m, signers) {\n        var multisigAccount, balanceNeeded, transaction, keys, dataLayout, data;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                multisigAccount = Keypair.generate(); // Allocate memory for the account\n\n                _context5.next = 3;\n                return Token.getMinBalanceRentForExemptMultisig(this.connection);\n\n              case 3:\n                balanceNeeded = _context5.sent;\n                transaction = new Transaction();\n                transaction.add(SystemProgram.createAccount({\n                  fromPubkey: this.payer.publicKey,\n                  newAccountPubkey: multisigAccount.publicKey,\n                  lamports: balanceNeeded,\n                  space: MultisigLayout.span,\n                  programId: this.programId\n                })); // create the new account\n\n                keys = [{\n                  pubkey: multisigAccount.publicKey,\n                  isSigner: false,\n                  isWritable: true\n                }, {\n                  pubkey: SYSVAR_RENT_PUBKEY,\n                  isSigner: false,\n                  isWritable: false\n                }];\n                signers.forEach(function (signer) {\n                  return keys.push({\n                    pubkey: signer,\n                    isSigner: false,\n                    isWritable: false\n                  });\n                });\n                dataLayout = struct([u8('instruction'), u8('m')]);\n                data = buffer.Buffer.alloc(dataLayout.span);\n                dataLayout.encode({\n                  instruction: 2,\n                  // InitializeMultisig instruction\n                  m: m\n                }, data);\n                transaction.add({\n                  keys: keys,\n                  programId: this.programId,\n                  data: data\n                }); // Send the two instructions\n\n                _context5.next = 14;\n                return sendAndConfirmTransaction('createAccount and InitializeMultisig', this.connection, transaction, this.payer, multisigAccount);\n\n              case 14:\n                return _context5.abrupt(\"return\", multisigAccount.publicKey);\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function createMultisig(_x6, _x7) {\n        return _createMultisig.apply(this, arguments);\n      }\n\n      return createMultisig;\n    }()\n    /**\n     * Retrieve mint information\n     */\n\n  }, {\n    key: \"getMintInfo\",\n    value: function () {\n      var _getMintInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var info, data, mintInfo;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.connection.getAccountInfo(this.publicKey);\n\n              case 2:\n                info = _context6.sent;\n\n                if (!(info === null)) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                throw new Error('Failed to find mint account');\n\n              case 5:\n                if (info.owner.equals(this.programId)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                throw new Error(\"Invalid mint owner: \".concat(JSON.stringify(info.owner)));\n\n              case 7:\n                if (!(info.data.length != MintLayout.span)) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Invalid mint size\");\n\n              case 9:\n                data = buffer.Buffer.from(info.data);\n                mintInfo = MintLayout.decode(data);\n\n                if (mintInfo.mintAuthorityOption === 0) {\n                  mintInfo.mintAuthority = null;\n                } else {\n                  mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n                }\n\n                mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n                mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n                if (mintInfo.freezeAuthorityOption === 0) {\n                  mintInfo.freezeAuthority = null;\n                } else {\n                  mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n                }\n\n                return _context6.abrupt(\"return\", mintInfo);\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getMintInfo() {\n        return _getMintInfo.apply(this, arguments);\n      }\n\n      return getMintInfo;\n    }()\n    /**\n     * Retrieve account information\n     *\n     * @param account Public key of the account\n     */\n\n  }, {\n    key: \"getAccountInfo\",\n    value: function () {\n      var _getAccountInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(account, commitment) {\n        var info, data, accountInfo;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.connection.getAccountInfo(account, commitment);\n\n              case 2:\n                info = _context7.sent;\n\n                if (!(info === null)) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                throw new Error(FAILED_TO_FIND_ACCOUNT);\n\n              case 5:\n                if (info.owner.equals(this.programId)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                throw new Error(INVALID_ACCOUNT_OWNER);\n\n              case 7:\n                if (!(info.data.length != AccountLayout.span)) {\n                  _context7.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Invalid account size\");\n\n              case 9:\n                data = buffer.Buffer.from(info.data);\n                accountInfo = AccountLayout.decode(data);\n                accountInfo.address = account;\n                accountInfo.mint = new PublicKey(accountInfo.mint);\n                accountInfo.owner = new PublicKey(accountInfo.owner);\n                accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n                if (accountInfo.delegateOption === 0) {\n                  accountInfo.delegate = null;\n                  accountInfo.delegatedAmount = new u64();\n                } else {\n                  accountInfo.delegate = new PublicKey(accountInfo.delegate);\n                  accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n                }\n\n                accountInfo.isInitialized = accountInfo.state !== 0;\n                accountInfo.isFrozen = accountInfo.state === 2;\n\n                if (accountInfo.isNativeOption === 1) {\n                  accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n                  accountInfo.isNative = true;\n                } else {\n                  accountInfo.rentExemptReserve = null;\n                  accountInfo.isNative = false;\n                }\n\n                if (accountInfo.closeAuthorityOption === 0) {\n                  accountInfo.closeAuthority = null;\n                } else {\n                  accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n                }\n\n                if (accountInfo.mint.equals(this.publicKey)) {\n                  _context7.next = 22;\n                  break;\n                }\n\n                throw new Error(\"Invalid account mint: \".concat(JSON.stringify(accountInfo.mint), \" !== \").concat(JSON.stringify(this.publicKey)));\n\n              case 22:\n                return _context7.abrupt(\"return\", accountInfo);\n\n              case 23:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getAccountInfo(_x8, _x9) {\n        return _getAccountInfo.apply(this, arguments);\n      }\n\n      return getAccountInfo;\n    }()\n    /**\n     * Retrieve Multisig information\n     *\n     * @param multisig Public key of the account\n     */\n\n  }, {\n    key: \"getMultisigInfo\",\n    value: function () {\n      var _getMultisigInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(multisig) {\n        var info, data, multisigInfo;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.connection.getAccountInfo(multisig);\n\n              case 2:\n                info = _context8.sent;\n\n                if (!(info === null)) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                throw new Error('Failed to find multisig');\n\n              case 5:\n                if (info.owner.equals(this.programId)) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                throw new Error(\"Invalid multisig owner\");\n\n              case 7:\n                if (!(info.data.length != MultisigLayout.span)) {\n                  _context8.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Invalid multisig size\");\n\n              case 9:\n                data = buffer.Buffer.from(info.data);\n                multisigInfo = MultisigLayout.decode(data);\n                multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n                multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n                multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n                multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n                multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n                multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n                multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n                multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n                multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n                multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n                multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n                return _context8.abrupt(\"return\", multisigInfo);\n\n              case 23:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getMultisigInfo(_x10) {\n        return _getMultisigInfo.apply(this, arguments);\n      }\n\n      return getMultisigInfo;\n    }()\n    /**\n     * Transfer tokens to another account\n     *\n     * @param source Source account\n     * @param destination Destination account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Number of tokens to transfer\n     */\n\n  }, {\n    key: \"transfer\",\n    value: function () {\n      var _transfer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(source, destination, owner, multiSigners, amount) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context9.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['Transfer', this.connection, new Transaction().add(Token.createTransferInstruction(this.programId, source, destination, ownerPublicKey, multiSigners, amount)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n                return _context9.abrupt(\"return\", _context9.sent);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function transfer(_x11, _x12, _x13, _x14, _x15) {\n        return _transfer.apply(this, arguments);\n      }\n\n      return transfer;\n    }()\n    /**\n     * Grant a third-party permission to transfer up the specified number of tokens from an account\n     *\n     * @param account Public key of the account\n     * @param delegate Account authorized to perform a transfer tokens from the source account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Maximum number of tokens the delegate may transfer\n     */\n\n  }, {\n    key: \"approve\",\n    value: function () {\n      var _approve = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(account, delegate, owner, multiSigners, amount) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context10.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['Approve', this.connection, new Transaction().add(Token.createApproveInstruction(this.programId, account, delegate, ownerPublicKey, multiSigners, amount)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function approve(_x16, _x17, _x18, _x19, _x20) {\n        return _approve.apply(this, arguments);\n      }\n\n      return approve;\n    }()\n    /**\n     * Remove approval for the transfer of any remaining tokens\n     *\n     * @param account Public key of the account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     */\n\n  }, {\n    key: \"revoke\",\n    value: function () {\n      var _revoke = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(account, owner, multiSigners) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context11.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['Revoke', this.connection, new Transaction().add(Token.createRevokeInstruction(this.programId, account, ownerPublicKey, multiSigners)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function revoke(_x21, _x22, _x23) {\n        return _revoke.apply(this, arguments);\n      }\n\n      return revoke;\n    }()\n    /**\n     * Assign a new authority to the account\n     *\n     * @param account Public key of the account\n     * @param newAuthority New authority of the account\n     * @param authorityType Type of authority to set\n     * @param currentAuthority Current authority of the account\n     * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n     */\n\n  }, {\n    key: \"setAuthority\",\n    value: function () {\n      var _setAuthority = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(account, newAuthority, authorityType, currentAuthority, multiSigners) {\n        var currentAuthorityPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                if (isAccount(currentAuthority)) {\n                  currentAuthorityPublicKey = currentAuthority.publicKey;\n                  signers = [currentAuthority];\n                } else {\n                  currentAuthorityPublicKey = currentAuthority;\n                  signers = multiSigners;\n                }\n\n                _context12.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['SetAuthority', this.connection, new Transaction().add(Token.createSetAuthorityInstruction(this.programId, account, newAuthority, authorityType, currentAuthorityPublicKey, multiSigners)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function setAuthority(_x24, _x25, _x26, _x27, _x28) {\n        return _setAuthority.apply(this, arguments);\n      }\n\n      return setAuthority;\n    }()\n    /**\n     * Mint new tokens\n     *\n     * @param dest Public key of the account to mint to\n     * @param authority Minting authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Amount to mint\n     */\n\n  }, {\n    key: \"mintTo\",\n    value: function () {\n      var _mintTo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(dest, authority, multiSigners, amount) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                if (isAccount(authority)) {\n                  ownerPublicKey = authority.publicKey;\n                  signers = [authority];\n                } else {\n                  ownerPublicKey = authority;\n                  signers = multiSigners;\n                }\n\n                _context13.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['MintTo', this.connection, new Transaction().add(Token.createMintToInstruction(this.programId, this.publicKey, dest, ownerPublicKey, multiSigners, amount)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function mintTo(_x29, _x30, _x31, _x32) {\n        return _mintTo.apply(this, arguments);\n      }\n\n      return mintTo;\n    }()\n    /**\n     * Burn tokens\n     *\n     * @param account Account to burn tokens from\n     * @param owner Account owner\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Amount to burn\n     */\n\n  }, {\n    key: \"burn\",\n    value: function () {\n      var _burn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(account, owner, multiSigners, amount) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context14.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['Burn', this.connection, new Transaction().add(Token.createBurnInstruction(this.programId, this.publicKey, account, ownerPublicKey, multiSigners, amount)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function burn(_x33, _x34, _x35, _x36) {\n        return _burn.apply(this, arguments);\n      }\n\n      return burn;\n    }()\n    /**\n     * Close account\n     *\n     * @param account Account to close\n     * @param dest Account to receive the remaining balance of the closed account\n     * @param authority Authority which is allowed to close the account\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     */\n\n  }, {\n    key: \"closeAccount\",\n    value: function () {\n      var _closeAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(account, dest, authority, multiSigners) {\n        var authorityPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                if (isAccount(authority)) {\n                  authorityPublicKey = authority.publicKey;\n                  signers = [authority];\n                } else {\n                  authorityPublicKey = authority;\n                  signers = multiSigners;\n                }\n\n                _context15.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['CloseAccount', this.connection, new Transaction().add(Token.createCloseAccountInstruction(this.programId, account, dest, authorityPublicKey, multiSigners)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function closeAccount(_x37, _x38, _x39, _x40) {\n        return _closeAccount.apply(this, arguments);\n      }\n\n      return closeAccount;\n    }()\n    /**\n     * Freeze account\n     *\n     * @param account Account to freeze\n     * @param authority The mint freeze authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     */\n\n  }, {\n    key: \"freezeAccount\",\n    value: function () {\n      var _freezeAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(account, authority, multiSigners) {\n        var authorityPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                if (isAccount(authority)) {\n                  authorityPublicKey = authority.publicKey;\n                  signers = [authority];\n                } else {\n                  authorityPublicKey = authority;\n                  signers = multiSigners;\n                }\n\n                _context16.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['FreezeAccount', this.connection, new Transaction().add(Token.createFreezeAccountInstruction(this.programId, account, this.publicKey, authorityPublicKey, multiSigners)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function freezeAccount(_x41, _x42, _x43) {\n        return _freezeAccount.apply(this, arguments);\n      }\n\n      return freezeAccount;\n    }()\n    /**\n     * Thaw account\n     *\n     * @param account Account to thaw\n     * @param authority The mint freeze authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     */\n\n  }, {\n    key: \"thawAccount\",\n    value: function () {\n      var _thawAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(account, authority, multiSigners) {\n        var authorityPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                if (isAccount(authority)) {\n                  authorityPublicKey = authority.publicKey;\n                  signers = [authority];\n                } else {\n                  authorityPublicKey = authority;\n                  signers = multiSigners;\n                }\n\n                _context17.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['ThawAccount', this.connection, new Transaction().add(Token.createThawAccountInstruction(this.programId, account, this.publicKey, authorityPublicKey, multiSigners)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function thawAccount(_x44, _x45, _x46) {\n        return _thawAccount.apply(this, arguments);\n      }\n\n      return thawAccount;\n    }()\n    /**\n     * Transfer tokens to another account, asserting the token mint and decimals\n     *\n     * @param source Source account\n     * @param destination Destination account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Number of tokens to transfer\n     * @param decimals Number of decimals in transfer amount\n     */\n\n  }, {\n    key: \"transferChecked\",\n    value: function () {\n      var _transferChecked = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(source, destination, owner, multiSigners, amount, decimals) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context18.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['TransferChecked', this.connection, new Transaction().add(Token.createTransferCheckedInstruction(this.programId, source, this.publicKey, destination, ownerPublicKey, multiSigners, amount, decimals)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n                return _context18.abrupt(\"return\", _context18.sent);\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function transferChecked(_x47, _x48, _x49, _x50, _x51, _x52) {\n        return _transferChecked.apply(this, arguments);\n      }\n\n      return transferChecked;\n    }()\n    /**\n     * Grant a third-party permission to transfer up the specified number of tokens from an account,\n     * asserting the token mint and decimals\n     *\n     * @param account Public key of the account\n     * @param delegate Account authorized to perform a transfer tokens from the source account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Maximum number of tokens the delegate may transfer\n     * @param decimals Number of decimals in approve amount\n     */\n\n  }, {\n    key: \"approveChecked\",\n    value: function () {\n      var _approveChecked = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(account, delegate, owner, multiSigners, amount, decimals) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context19.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['ApproveChecked', this.connection, new Transaction().add(Token.createApproveCheckedInstruction(this.programId, account, this.publicKey, delegate, ownerPublicKey, multiSigners, amount, decimals)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function approveChecked(_x53, _x54, _x55, _x56, _x57, _x58) {\n        return _approveChecked.apply(this, arguments);\n      }\n\n      return approveChecked;\n    }()\n    /**\n     * Mint new tokens, asserting the token mint and decimals\n     *\n     * @param dest Public key of the account to mint to\n     * @param authority Minting authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Amount to mint\n     * @param decimals Number of decimals in amount to mint\n     */\n\n  }, {\n    key: \"mintToChecked\",\n    value: function () {\n      var _mintToChecked = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(dest, authority, multiSigners, amount, decimals) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                if (isAccount(authority)) {\n                  ownerPublicKey = authority.publicKey;\n                  signers = [authority];\n                } else {\n                  ownerPublicKey = authority;\n                  signers = multiSigners;\n                }\n\n                _context20.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['MintToChecked', this.connection, new Transaction().add(Token.createMintToCheckedInstruction(this.programId, this.publicKey, dest, ownerPublicKey, multiSigners, amount, decimals)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function mintToChecked(_x59, _x60, _x61, _x62, _x63) {\n        return _mintToChecked.apply(this, arguments);\n      }\n\n      return mintToChecked;\n    }()\n    /**\n     * Burn tokens, asserting the token mint and decimals\n     *\n     * @param account Account to burn tokens from\n     * @param owner Account owner\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Amount to burn\n     * @param decimals Number of decimals in amount to burn\n     */\n\n  }, {\n    key: \"burnChecked\",\n    value: function () {\n      var _burnChecked = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(account, owner, multiSigners, amount, decimals) {\n        var ownerPublicKey, signers;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                if (isAccount(owner)) {\n                  ownerPublicKey = owner.publicKey;\n                  signers = [owner];\n                } else {\n                  ownerPublicKey = owner;\n                  signers = multiSigners;\n                }\n\n                _context21.next = 3;\n                return sendAndConfirmTransaction.apply(void 0, ['BurnChecked', this.connection, new Transaction().add(Token.createBurnCheckedInstruction(this.programId, this.publicKey, account, ownerPublicKey, multiSigners, amount, decimals)), this.payer].concat(_toConsumableArray(signers)));\n\n              case 3:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function burnChecked(_x64, _x65, _x66, _x67, _x68) {\n        return _burnChecked.apply(this, arguments);\n      }\n\n      return burnChecked;\n    }()\n    /**\n     * Sync amount in native SPL token account to underlying lamports\n     *\n     * @param nativeAccount Account to sync\n     */\n\n  }, {\n    key: \"syncNative\",\n    value: function () {\n      var _syncNative = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(nativeAccount) {\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.next = 2;\n                return sendAndConfirmTransaction('SyncNative', this.connection, new Transaction().add(Token.createSyncNativeInstruction(this.programId, nativeAccount)), this.payer);\n\n              case 2:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function syncNative(_x69) {\n        return _syncNative.apply(this, arguments);\n      }\n\n      return syncNative;\n    }()\n    /**\n     * Construct an InitializeMint instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Token mint account\n     * @param decimals Number of decimals in token account amounts\n     * @param mintAuthority Minting authority\n     * @param freezeAuthority Optional authority that can freeze token accounts\n     */\n\n  }], [{\n    key: \"getMinBalanceRentForExemptMint\",\n    value: function () {\n      var _getMinBalanceRentForExemptMint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(connection) {\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return connection.getMinimumBalanceForRentExemption(MintLayout.span);\n\n              case 2:\n                return _context23.abrupt(\"return\", _context23.sent);\n\n              case 3:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      function getMinBalanceRentForExemptMint(_x70) {\n        return _getMinBalanceRentForExemptMint.apply(this, arguments);\n      }\n\n      return getMinBalanceRentForExemptMint;\n    }()\n    /**\n     * Get the minimum balance for the account to be rent exempt\n     *\n     * @return Number of lamports required\n     */\n\n  }, {\n    key: \"getMinBalanceRentForExemptAccount\",\n    value: function () {\n      var _getMinBalanceRentForExemptAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(connection) {\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                _context24.next = 2;\n                return connection.getMinimumBalanceForRentExemption(AccountLayout.span);\n\n              case 2:\n                return _context24.abrupt(\"return\", _context24.sent);\n\n              case 3:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24);\n      }));\n\n      function getMinBalanceRentForExemptAccount(_x71) {\n        return _getMinBalanceRentForExemptAccount.apply(this, arguments);\n      }\n\n      return getMinBalanceRentForExemptAccount;\n    }()\n    /**\n     * Get the minimum balance for the multsig to be rent exempt\n     *\n     * @return Number of lamports required\n     */\n\n  }, {\n    key: \"getMinBalanceRentForExemptMultisig\",\n    value: function () {\n      var _getMinBalanceRentForExemptMultisig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(connection) {\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.next = 2;\n                return connection.getMinimumBalanceForRentExemption(MultisigLayout.span);\n\n              case 2:\n                return _context25.abrupt(\"return\", _context25.sent);\n\n              case 3:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25);\n      }));\n\n      function getMinBalanceRentForExemptMultisig(_x72) {\n        return _getMinBalanceRentForExemptMultisig.apply(this, arguments);\n      }\n\n      return getMinBalanceRentForExemptMultisig;\n    }()\n    /**\n     * Create and initialize a token.\n     *\n     * @param connection The connection to use\n     * @param payer Fee payer for transaction\n     * @param mintAuthority Account or multisig that will control minting\n     * @param freezeAuthority Optional account or multisig that can freeze token accounts\n     * @param decimals Location of the decimal place\n     * @param programId Optional token programId, uses the system programId by default\n     * @return Token object for the newly minted token\n     */\n\n  }, {\n    key: \"createMint\",\n    value: function () {\n      var _createMint = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(connection, payer, mintAuthority, freezeAuthority, decimals, programId) {\n        var mintAccount, token, balanceNeeded, transaction;\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                mintAccount = Keypair.generate();\n                token = new Token(connection, mintAccount.publicKey, programId, payer); // Allocate memory for the account\n\n                _context26.next = 4;\n                return Token.getMinBalanceRentForExemptMint(connection);\n\n              case 4:\n                balanceNeeded = _context26.sent;\n                transaction = new Transaction();\n                transaction.add(SystemProgram.createAccount({\n                  fromPubkey: payer.publicKey,\n                  newAccountPubkey: mintAccount.publicKey,\n                  lamports: balanceNeeded,\n                  space: MintLayout.span,\n                  programId: programId\n                }));\n                transaction.add(Token.createInitMintInstruction(programId, mintAccount.publicKey, decimals, mintAuthority, freezeAuthority)); // Send the two instructions\n\n                _context26.next = 10;\n                return sendAndConfirmTransaction('createAccount and InitializeMint', connection, transaction, payer, mintAccount);\n\n              case 10:\n                return _context26.abrupt(\"return\", token);\n\n              case 11:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26);\n      }));\n\n      function createMint(_x73, _x74, _x75, _x76, _x77, _x78) {\n        return _createMint.apply(this, arguments);\n      }\n\n      return createMint;\n    }()\n  }, {\n    key: \"createWrappedNativeAccount\",\n    value: function () {\n      var _createWrappedNativeAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(connection, programId, owner, payer, amount) {\n        var balanceNeeded, newAccount, transaction;\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                _context27.next = 2;\n                return Token.getMinBalanceRentForExemptAccount(connection);\n\n              case 2:\n                balanceNeeded = _context27.sent;\n                // Create a new account\n                newAccount = Keypair.generate();\n                transaction = new Transaction();\n                transaction.add(SystemProgram.createAccount({\n                  fromPubkey: payer.publicKey,\n                  newAccountPubkey: newAccount.publicKey,\n                  lamports: balanceNeeded,\n                  space: AccountLayout.span,\n                  programId: programId\n                })); // Send lamports to it (these will be wrapped into native tokens by the token program)\n\n                transaction.add(SystemProgram.transfer({\n                  fromPubkey: payer.publicKey,\n                  toPubkey: newAccount.publicKey,\n                  lamports: amount\n                })); // Assign the new account to the native token mint.\n                // the account will be initialized with a balance equal to the native token balance.\n                // (i.e. amount)\n\n                transaction.add(Token.createInitAccountInstruction(programId, NATIVE_MINT, newAccount.publicKey, owner)); // Send the three instructions\n\n                _context27.next = 10;\n                return sendAndConfirmTransaction('createAccount, transfer, and initializeAccount', connection, transaction, payer, newAccount);\n\n              case 10:\n                return _context27.abrupt(\"return\", newAccount.publicKey);\n\n              case 11:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27);\n      }));\n\n      function createWrappedNativeAccount(_x79, _x80, _x81, _x82, _x83) {\n        return _createWrappedNativeAccount.apply(this, arguments);\n      }\n\n      return createWrappedNativeAccount;\n    }()\n  }, {\n    key: \"createInitMintInstruction\",\n    value: function createInitMintInstruction(programId, mint, decimals, mintAuthority, freezeAuthority) {\n      var keys = [{\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }];\n      var commandDataLayout = struct([u8('instruction'), u8('decimals'), publicKey('mintAuthority'), u8('option'), publicKey('freezeAuthority')]);\n      var data = buffer.Buffer.alloc(1024);\n      {\n        var encodeLength = commandDataLayout.encode({\n          instruction: 0,\n          // InitializeMint instruction\n          decimals: decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0))\n        }, data);\n        data = data.slice(0, encodeLength);\n      }\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct an InitializeAccount instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Token mint account\n     * @param account New account\n     * @param owner Owner of the new account\n     */\n\n  }, {\n    key: \"createInitAccountInstruction\",\n    value: function createInitAccountInstruction(programId, mint, account, owner) {\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }];\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 1 // InitializeAccount instruction\n\n      }, data);\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Transfer instruction\n     *\n     * @param programId SPL Token program account\n     * @param source Source account\n     * @param destination Destination account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Number of tokens to transfer\n     */\n\n  }, {\n    key: \"createTransferInstruction\",\n    value: function createTransferInstruction(programId, source, destination, owner, multiSigners, amount) {\n      var dataLayout = struct([u8('instruction'), uint64('amount')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 3,\n        // Transfer instruction\n        amount: new u64(amount).toBuffer()\n      }, data);\n      var keys = [{\n        pubkey: source,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: destination,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct an Approve instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Public key of the account\n     * @param delegate Account authorized to perform a transfer of tokens from the source account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Maximum number of tokens the delegate may transfer\n     */\n\n  }, {\n    key: \"createApproveInstruction\",\n    value: function createApproveInstruction(programId, account, delegate, owner, multiSigners, amount) {\n      var dataLayout = struct([u8('instruction'), uint64('amount')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 4,\n        // Approve instruction\n        amount: new u64(amount).toBuffer()\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: delegate,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Revoke instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Public key of the account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     */\n\n  }, {\n    key: \"createRevokeInstruction\",\n    value: function createRevokeInstruction(programId, account, owner, multiSigners) {\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 5 // Approve instruction\n\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a SetAuthority instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Public key of the account\n     * @param newAuthority New authority of the account\n     * @param authorityType Type of authority to set\n     * @param currentAuthority Current authority of the specified type\n     * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n     */\n\n  }, {\n    key: \"createSetAuthorityInstruction\",\n    value: function createSetAuthorityInstruction(programId, account, newAuthority, authorityType, currentAuthority, multiSigners) {\n      var commandDataLayout = struct([u8('instruction'), u8('authorityType'), u8('option'), publicKey('newAuthority')]);\n      var data = buffer.Buffer.alloc(1024);\n      {\n        var encodeLength = commandDataLayout.encode({\n          instruction: 6,\n          // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0))\n        }, data);\n        data = data.slice(0, encodeLength);\n      }\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: currentAuthority,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: currentAuthority,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a MintTo instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Public key of the mint\n     * @param dest Public key of the account to mint to\n     * @param authority The mint authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Amount to mint\n     */\n\n  }, {\n    key: \"createMintToInstruction\",\n    value: function createMintToInstruction(programId, mint, dest, authority, multiSigners, amount) {\n      var dataLayout = struct([u8('instruction'), uint64('amount')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 7,\n        // MintTo instruction\n        amount: new u64(amount).toBuffer()\n      }, data);\n      var keys = [{\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: dest,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: authority,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: authority,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Burn instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Mint for the account\n     * @param account Account to burn tokens from\n     * @param owner Owner of the account\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount amount to burn\n     */\n\n  }, {\n    key: \"createBurnInstruction\",\n    value: function createBurnInstruction(programId, mint, account, owner, multiSigners, amount) {\n      var dataLayout = struct([u8('instruction'), uint64('amount')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 8,\n        // Burn instruction\n        amount: new u64(amount).toBuffer()\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Close instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Account to close\n     * @param dest Account to receive the remaining balance of the closed account\n     * @param authority Account Close authority\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     */\n\n  }, {\n    key: \"createCloseAccountInstruction\",\n    value: function createCloseAccountInstruction(programId, account, dest, owner, multiSigners) {\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 9 // CloseAccount instruction\n\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: dest,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Freeze instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Account to freeze\n     * @param mint Mint account\n     * @param authority Mint freeze authority\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     */\n\n  }, {\n    key: \"createFreezeAccountInstruction\",\n    value: function createFreezeAccountInstruction(programId, account, mint, authority, multiSigners) {\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 10 // FreezeAccount instruction\n\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: authority,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: authority,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a Thaw instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Account to thaw\n     * @param mint Mint account\n     * @param authority Mint freeze authority\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     */\n\n  }, {\n    key: \"createThawAccountInstruction\",\n    value: function createThawAccountInstruction(programId, account, mint, authority, multiSigners) {\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 11 // ThawAccount instruction\n\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: authority,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: authority,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a TransferChecked instruction\n     *\n     * @param programId SPL Token program account\n     * @param source Source account\n     * @param mint Mint account\n     * @param destination Destination account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Number of tokens to transfer\n     * @param decimals Number of decimals in transfer amount\n     */\n\n  }, {\n    key: \"createTransferCheckedInstruction\",\n    value: function createTransferCheckedInstruction(programId, source, mint, destination, owner, multiSigners, amount, decimals) {\n      var dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 12,\n        // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals: decimals\n      }, data);\n      var keys = [{\n        pubkey: source,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: destination,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct an ApproveChecked instruction\n     *\n     * @param programId SPL Token program account\n     * @param account Public key of the account\n     * @param mint Mint account\n     * @param delegate Account authorized to perform a transfer of tokens from the source account\n     * @param owner Owner of the source account\n     * @param multiSigners Signing accounts if `owner` is a multiSig\n     * @param amount Maximum number of tokens the delegate may transfer\n     * @param decimals Number of decimals in approve amount\n     */\n\n  }, {\n    key: \"createApproveCheckedInstruction\",\n    value: function createApproveCheckedInstruction(programId, account, mint, delegate, owner, multiSigners, amount, decimals) {\n      var dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 13,\n        // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals: decimals\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: delegate,\n        isSigner: false,\n        isWritable: false\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a MintToChecked instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Public key of the mint\n     * @param dest Public key of the account to mint to\n     * @param authority The mint authority\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount Amount to mint\n     * @param decimals Number of decimals in amount to mint\n     */\n\n  }, {\n    key: \"createMintToCheckedInstruction\",\n    value: function createMintToCheckedInstruction(programId, mint, dest, authority, multiSigners, amount, decimals) {\n      var dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 14,\n        // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals: decimals\n      }, data);\n      var keys = [{\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: dest,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: authority,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: authority,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a BurnChecked instruction\n     *\n     * @param programId SPL Token program account\n     * @param mint Mint for the account\n     * @param account Account to burn tokens from\n     * @param owner Owner of the account\n     * @param multiSigners Signing accounts if `authority` is a multiSig\n     * @param amount amount to burn\n     */\n\n  }, {\n    key: \"createBurnCheckedInstruction\",\n    value: function createBurnCheckedInstruction(programId, mint, account, owner, multiSigners, amount, decimals) {\n      var dataLayout = struct([u8('instruction'), uint64('amount'), u8('decimals')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 15,\n        // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals: decimals\n      }, data);\n      var keys = [{\n        pubkey: account,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: true\n      }];\n\n      if (multiSigners.length === 0) {\n        keys.push({\n          pubkey: owner,\n          isSigner: true,\n          isWritable: false\n        });\n      } else {\n        keys.push({\n          pubkey: owner,\n          isSigner: false,\n          isWritable: false\n        });\n        multiSigners.forEach(function (signer) {\n          return keys.push({\n            pubkey: signer.publicKey,\n            isSigner: true,\n            isWritable: false\n          });\n        });\n      }\n\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Construct a SyncNative instruction\n     *\n     * @param programId SPL Token program account\n     * @param nativeAccount Account to sync lamports from\n     */\n\n  }, {\n    key: \"createSyncNativeInstruction\",\n    value: function createSyncNativeInstruction(programId, nativeAccount) {\n      var dataLayout = struct([u8('instruction')]);\n      var data = buffer.Buffer.alloc(dataLayout.span);\n      dataLayout.encode({\n        instruction: 17 // SyncNative instruction\n\n      }, data);\n      var keys = [{\n        pubkey: nativeAccount,\n        isSigner: false,\n        isWritable: true\n      }];\n      return new TransactionInstruction({\n        keys: keys,\n        programId: programId,\n        data: data\n      });\n    }\n    /**\n     * Get the address for the associated token account\n     *\n     * @param associatedProgramId SPL Associated Token program account\n     * @param programId SPL Token program account\n     * @param mint Token mint account\n     * @param owner Owner of the new account\n     * @return Public key of the associated token account\n     */\n\n  }, {\n    key: \"getAssociatedTokenAddress\",\n    value: function () {\n      var _getAssociatedTokenAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(associatedProgramId, programId, mint, owner) {\n        var allowOwnerOffCurve,\n            _args28 = arguments;\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                allowOwnerOffCurve = _args28.length > 4 && _args28[4] !== undefined ? _args28[4] : false;\n\n                if (!(!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))) {\n                  _context28.next = 3;\n                  break;\n                }\n\n                throw new Error(\"Owner cannot sign: \".concat(owner.toString()));\n\n              case 3:\n                _context28.next = 5;\n                return PublicKey.findProgramAddress([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedProgramId);\n\n              case 5:\n                return _context28.abrupt(\"return\", _context28.sent[0]);\n\n              case 6:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28);\n      }));\n\n      function getAssociatedTokenAddress(_x84, _x85, _x86, _x87) {\n        return _getAssociatedTokenAddress.apply(this, arguments);\n      }\n\n      return getAssociatedTokenAddress;\n    }()\n    /**\n     * Construct the AssociatedTokenProgram instruction to create the associated\n     * token account\n     *\n     * @param associatedProgramId SPL Associated Token program account\n     * @param programId SPL Token program account\n     * @param mint Token mint account\n     * @param associatedAccount New associated account\n     * @param owner Owner of the new account\n     * @param payer Payer of fees\n     */\n\n  }, {\n    key: \"createAssociatedTokenAccountInstruction\",\n    value: function createAssociatedTokenAccountInstruction(associatedProgramId, programId, mint, associatedAccount, owner, payer) {\n      var data = buffer.Buffer.alloc(0);\n      var keys = [{\n        pubkey: payer,\n        isSigner: true,\n        isWritable: true\n      }, {\n        pubkey: associatedAccount,\n        isSigner: false,\n        isWritable: true\n      }, {\n        pubkey: owner,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: mint,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: programId,\n        isSigner: false,\n        isWritable: false\n      }, {\n        pubkey: SYSVAR_RENT_PUBKEY,\n        isSigner: false,\n        isWritable: false\n      }];\n      return new TransactionInstruction({\n        keys: keys,\n        programId: associatedProgramId,\n        data: data\n      });\n    }\n  }]);\n\n  return Token;\n}();\n\nexport { ASSOCIATED_TOKEN_PROGRAM_ID, AccountLayout, MintLayout, NATIVE_MINT, TOKEN_PROGRAM_ID, Token, u64 };","map":{"version":3,"mappings":"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","names":["byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","ieee754","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","K_MAX_LENGTH","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","proto","foo","Object","setPrototypeOf","prototype","defineProperty","enumerable","get","isBuffer","undefined","byteOffset","createBuffer","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","actual","write","slice","fromArrayLike","array","arrayView","copy","obj","numberIsNaN","type","isArray","data","toString","_isBuffer","compare","a","x","y","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","INSPECT_MAX_BYTES","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","toJSON","_arr","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","writable","configurable","name","stack","message","range","input","msg","received","isInteger","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","leadSurrogate","byteArray","src","dst","constructor","alphabet","table","i16","fn","BufferBigIntNotDefined","global","self","window","inherits","create","ctor","superCtor","super_","TempCtor","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styles","styleType","style","arrayToHash","hash","forEach","idx","recurseTimes","isFunction","isString","primitive","formatPrimitive","keys","visibleKeys","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","base","braces","toUTCString","formatArray","map","key","formatProperty","pop","reduceToSingleString","simple","JSON","stringify","isNumber","isNull","l","hasOwnProperty","match","desc","getOwnPropertyDescriptor","line","reduce","prev","cur","ar","re","isObject","objectToString","isPrimitive","o","origin","add","prop","hasOwn","objectKeys","pSlice","_functionsHaveNames","functionsHaveNames","pToString","arrbuf","DataView","assert","fail","ok","regex","getName","func","AssertionError","options","expected","operator","generatedMessage","stackStartFunction","captureStackTrace","err","fn_name","next_line","substring","truncate","something","utilInspect","rawname","equal","notEqual","deepEqual","_deepEqual","deepStrictEqual","strict","memos","getTime","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","objEquiv","isArguments","object","actualVisitedObjects","getPrototypeOf","aIsArgs","bIsArgs","ka","kb","sort","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","expectedException","test","isPrototypeOf","_tryBlock","block","_throws","shouldThrow","userProvidedMessage","isUnwantedException","isUnexpectedException","throws","doesNotThrow","ifError","Layout","span","property","rv","assign","values","nameWithProperty","bindConstructorLayout","Class","layout","layout_","boundConstructor_","makeDestinationObject","encode","decode","ExternalLayout","GreedyCount","elementSpan","rem","OffsetLayout","UInt","UIntBE","Int","IntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","NearUInt64BE","NearInt64","NearInt64BE","Float","FloatBE","Double","DoubleBE","Sequence","elementLayout","count","isCount","getSpan","elo","v","Structure","fields","decodePrefixes","acc","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","replicate","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","Blob","CString","srcb","UTF8","maxSpan","Constant","publicKey","BufferLayout","uint64","sendAndConfirmTransaction","title","connection","transaction","signers","realSendAndConfirmTransaction","skipPreflight","TOKEN_PROGRAM_ID","PublicKey","ASSOCIATED_TOKEN_PROGRAM_ID","FAILED_TO_FIND_ACCOUNT","INVALID_ACCOUNT_OWNER","pubkeyToBuffer","toBuffer","u64","reverse","zeroPad","BN","isAccount","accountOrPublicKey","AuthorityTypeCodes","MintTokens","FreezeAccount","AccountOwner","CloseAccount","NATIVE_MINT","MintLayout","AccountLayout","MultisigLayout","Token","programId","payer","_defineProperty","associatedProgramId","owner","getMinBalanceRentForExemptAccount","balanceNeeded","newAccount","Keypair","generate","Transaction","SystemProgram","createAccount","fromPubkey","newAccountPubkey","lamports","space","mintPublicKey","createInitAccountInstruction","getAssociatedTokenAddress","associatedAddress","createAssociatedTokenAccountInternal","createAssociatedTokenAccountInstruction","getAccountInfo","multisigAccount","getMinBalanceRentForExemptMultisig","pubkey","isSigner","isWritable","SYSVAR_RENT_PUBKEY","signer","dataLayout","instruction","info","mintInfo","mintAuthorityOption","mintAuthority","supply","fromBuffer","isInitialized","freezeAuthorityOption","freezeAuthority","account","commitment","accountInfo","address","mint","amount","delegateOption","delegate","delegatedAmount","state","isFrozen","isNativeOption","rentExemptReserve","isNative","closeAuthorityOption","closeAuthority","multisig","multisigInfo","signer1","signer2","signer3","signer4","signer5","signer6","signer7","signer8","signer9","signer10","signer11","destination","multiSigners","ownerPublicKey","createTransferInstruction","createApproveInstruction","createRevokeInstruction","newAuthority","authorityType","currentAuthority","currentAuthorityPublicKey","createSetAuthorityInstruction","authority","createMintToInstruction","createBurnInstruction","authorityPublicKey","createCloseAccountInstruction","createFreezeAccountInstruction","createThawAccountInstruction","decimals","createTransferCheckedInstruction","createApproveCheckedInstruction","createMintToCheckedInstruction","createBurnCheckedInstruction","nativeAccount","createSyncNativeInstruction","getMinimumBalanceForRentExemption","mintAccount","token","getMinBalanceRentForExemptMint","createInitMintInstruction","transfer","toPubkey","commandDataLayout","encodeLength","option","TransactionInstruction","allowOwnerOffCurve","isOnCurve","findProgramAddress","associatedAccount"],"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","../node_modules/rollup-plugin-node-polyfills/polyfills/util.js","../node_modules/rollup-plugin-node-polyfills/polyfills/assert.js","../node_modules/buffer-layout/lib/Layout.js","../client/layout.js","../client/util/send-and-confirm-transaction.js","../client/token.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n","// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Connection,\n  Signer,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Signer>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n  });\n}\n","/**\n * @flow\n */\n\nimport {Buffer} from 'buffer';\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport * as BufferLayout from 'buffer-layout';\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport type {\n  Connection,\n  Commitment,\n  Signer,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\n\nexport const TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\nfunction pubkeyToBuffer(publicKey: PublicKey): typeof Buffer {\n  return Buffer.from(publicKey.toBuffer());\n}\n\n/**\n * 64-bit value\n */\nexport class u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'u64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a u64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): u64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\nfunction isAccount(accountOrPublicKey: any): boolean {\n  return 'publicKey' in accountOrPublicKey;\n}\n\ntype AuthorityType =\n  | 'MintTokens'\n  | 'FreezeAccount'\n  | 'AccountOwner'\n  | 'CloseAccount';\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3,\n};\n\n// The address of the special mint for wrapped native token.\nexport const NATIVE_MINT: PublicKey = new PublicKey(\n  'So11111111111111111111111111111111111111112',\n);\n\n/**\n * Information about the mint\n */\ntype MintInfo = {|\n  /**\n   * Optional authority used to mint new tokens. The mint authority may only be provided during\n   * mint creation. If no mint authority is present then the mint has a fixed supply and no\n   * further tokens may be minted.\n   */\n  mintAuthority: null | PublicKey,\n\n  /**\n   * Total supply of tokens\n   */\n  supply: u64,\n\n  /**\n   * Number of base 10 digits to the right of the decimal place\n   */\n  decimals: number,\n\n  /**\n   * Is this mint initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Optional authority to freeze token accounts\n   */\n  freezeAuthority: null | PublicKey,\n|};\n\nexport const MintLayout: typeof BufferLayout.Structure = BufferLayout.struct([\n  BufferLayout.u32('mintAuthorityOption'),\n  Layout.publicKey('mintAuthority'),\n  Layout.uint64('supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('isInitialized'),\n  BufferLayout.u32('freezeAuthorityOption'),\n  Layout.publicKey('freezeAuthority'),\n]);\n\n/**\n * Information about an account\n */\ntype AccountInfo = {|\n  /**\n   * The address of this account\n   */\n  address: PublicKey,\n\n  /**\n   * The mint associated with this account\n   */\n  mint: PublicKey,\n\n  /**\n   * Owner of this account\n   */\n  owner: PublicKey,\n\n  /**\n   * Amount of tokens this account holds\n   */\n  amount: u64,\n\n  /**\n   * The delegate for this account\n   */\n  delegate: null | PublicKey,\n\n  /**\n   * The amount of tokens the delegate authorized to the delegate\n   */\n  delegatedAmount: u64,\n\n  /**\n   * Is this account initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Is this account frozen\n   */\n  isFrozen: boolean,\n\n  /**\n   * Is this a native token account\n   */\n  isNative: boolean,\n\n  /**\n   * If this account is a native token, it must be rent-exempt. This\n   * value logs the rent-exempt reserve which must remain in the balance\n   * until the account is closed.\n   */\n  rentExemptReserve: null | u64,\n\n  /**\n   * Optional authority to close the account\n   */\n  closeAuthority: null | PublicKey,\n|};\n\n/**\n * @private\n */\nexport const AccountLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.publicKey('mint'),\n    Layout.publicKey('owner'),\n    Layout.uint64('amount'),\n    BufferLayout.u32('delegateOption'),\n    Layout.publicKey('delegate'),\n    BufferLayout.u8('state'),\n    BufferLayout.u32('isNativeOption'),\n    Layout.uint64('isNative'),\n    Layout.uint64('delegatedAmount'),\n    BufferLayout.u32('closeAuthorityOption'),\n    Layout.publicKey('closeAuthority'),\n  ],\n);\n\n/**\n * Information about an multisig\n */\ntype MultisigInfo = {|\n  /**\n   * The number of signers required\n   */\n  m: number,\n\n  /**\n   * Number of possible signers, corresponds to the\n   * number of `signers` that are valid.\n   */\n  n: number,\n\n  /**\n   * Is this mint initialized\n   */\n  initialized: boolean,\n\n  /**\n   * The signers\n   */\n  signer1: PublicKey,\n  signer2: PublicKey,\n  signer3: PublicKey,\n  signer4: PublicKey,\n  signer5: PublicKey,\n  signer6: PublicKey,\n  signer7: PublicKey,\n  signer8: PublicKey,\n  signer9: PublicKey,\n  signer10: PublicKey,\n  signer11: PublicKey,\n|};\n\n/**\n * @private\n */\nconst MultisigLayout = BufferLayout.struct([\n  BufferLayout.u8('m'),\n  BufferLayout.u8('n'),\n  BufferLayout.u8('is_initialized'),\n  Layout.publicKey('signer1'),\n  Layout.publicKey('signer2'),\n  Layout.publicKey('signer3'),\n  Layout.publicKey('signer4'),\n  Layout.publicKey('signer5'),\n  Layout.publicKey('signer6'),\n  Layout.publicKey('signer7'),\n  Layout.publicKey('signer8'),\n  Layout.publicKey('signer9'),\n  Layout.publicKey('signer10'),\n  Layout.publicKey('signer11'),\n]);\n\n/**\n * An ERC20-like Token\n */\nexport class Token {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * The public key identifying this mint\n   */\n  publicKey: PublicKey;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  programId: PublicKey;\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n  associatedProgramId: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Signer;\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(\n    connection: Connection,\n    publicKey: PublicKey,\n    programId: PublicKey,\n    payer: Signer,\n  ) {\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    });\n  }\n\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMint(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptAccount(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      AccountLayout.span,\n    );\n  }\n\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMultisig(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      MultisigLayout.span,\n    );\n  }\n\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n  static async createMint(\n    connection: Connection,\n    payer: Signer,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n    decimals: number,\n    programId: PublicKey,\n  ): Promise<Token> {\n    const mintAccount = Keypair.generate();\n    const token = new Token(\n      connection,\n      mintAccount.publicKey,\n      programId,\n      payer,\n    );\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(\n      connection,\n    );\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: mintAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MintLayout.span,\n        programId,\n      }),\n    );\n\n    transaction.add(\n      Token.createInitMintInstruction(\n        programId,\n        mintAccount.publicKey,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMint',\n      connection,\n      transaction,\n      payer,\n      mintAccount,\n    );\n\n    return token;\n  }\n\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n  async createAccount(owner: PublicKey): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      this.connection,\n    );\n\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    const mintPublicKey = this.publicKey;\n    transaction.add(\n      Token.createInitAccountInstruction(\n        this.programId,\n        mintPublicKey,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeAccount',\n      this.connection,\n      transaction,\n      this.payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n  async createAssociatedTokenAccount(owner: PublicKey): Promise<PublicKey> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(\n    owner: PublicKey,\n    associatedAddress: PublicKey,\n  ): Promise<PublicKey> {\n    await sendAndConfirmTransaction(\n      'CreateAssociatedTokenAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createAssociatedTokenAccountInstruction(\n          this.associatedProgramId,\n          this.programId,\n          this.publicKey,\n          associatedAddress,\n          owner,\n          this.payer.publicKey,\n        ),\n      ),\n      this.payer,\n    );\n\n    return associatedAddress;\n  }\n\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n  async getOrCreateAssociatedAccountInfo(\n    owner: PublicKey,\n  ): Promise<AccountInfo> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (\n        err.message === FAILED_TO_FIND_ACCOUNT ||\n        err.message === INVALID_ACCOUNT_OWNER\n      ) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(\n            owner,\n            associatedAddress,\n          );\n        } catch (err) {\n          // ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        }\n\n        // Now this should always succeed\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n  static async createWrappedNativeAccount(\n    connection: Connection,\n    programId: PublicKey,\n    owner: PublicKey,\n    payer: Signer,\n    amount: number,\n  ): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      connection,\n    );\n\n    // Create a new account\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId,\n      }),\n    );\n\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: newAccount.publicKey,\n        lamports: amount,\n      }),\n    );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    transaction.add(\n      Token.createInitAccountInstruction(\n        programId,\n        NATIVE_MINT,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the three instructions\n    await sendAndConfirmTransaction(\n      'createAccount, transfer, and initializeAccount',\n      connection,\n      transaction,\n      payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n  async createMultisig(\n    m: number,\n    signers: Array<PublicKey>,\n  ): Promise<PublicKey> {\n    const multisigAccount = Keypair.generate();\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(\n      this.connection,\n    );\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: multisigAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MultisigLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    // create the new account\n    let keys = [\n      {pubkey: multisigAccount.publicKey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    signers.forEach(signer =>\n      keys.push({pubkey: signer, isSigner: false, isWritable: false}),\n    );\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('m'),\n    ]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // InitializeMultisig instruction\n        m,\n      },\n      data,\n    );\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMultisig',\n      this.connection,\n      transaction,\n      this.payer,\n      multisigAccount,\n    );\n\n    return multisigAccount.publicKey;\n  }\n\n  /**\n   * Retrieve mint information\n   */\n  async getMintInfo(): Promise<MintInfo> {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n    return mintInfo;\n  }\n\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n  async getAccountInfo(\n    account: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo> {\n    const info = await this.connection.getAccountInfo(account, commitment);\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(\n        `Invalid account mint: ${JSON.stringify(\n          accountInfo.mint,\n        )} !== ${JSON.stringify(this.publicKey)}`,\n      );\n    }\n    return accountInfo;\n  }\n\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n  async getMultisigInfo(multisig: PublicKey): Promise<MultisigInfo> {\n    const info = await this.connection.getAccountInfo(multisig);\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n\n    return multisigInfo;\n  }\n\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  async transfer(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'Transfer',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferInstruction(\n          this.programId,\n          source,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  async approve(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Approve',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveInstruction(\n          this.programId,\n          account,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  async revoke(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Revoke',\n      this.connection,\n      new Transaction().add(\n        Token.createRevokeInstruction(\n          this.programId,\n          account,\n          ownerPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  async setAuthority(\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let currentAuthorityPublicKey: PublicKey;\n    let signers;\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'SetAuthority',\n      this.connection,\n      new Transaction().add(\n        Token.createSetAuthorityInstruction(\n          this.programId,\n          account,\n          newAuthority,\n          authorityType,\n          currentAuthorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  async mintTo(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintTo',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n  async burn(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Burn',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async closeAccount(\n    account: PublicKey,\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'CloseAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createCloseAccountInstruction(\n          this.programId,\n          account,\n          dest,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async freezeAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'FreezeAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createFreezeAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async thawAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ThawAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createThawAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  async transferChecked(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'TransferChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferCheckedInstruction(\n          this.programId,\n          source,\n          this.publicKey,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  async approveChecked(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ApproveChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveCheckedInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  async mintToChecked(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintToChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n  async burnChecked(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'BurnChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Sync amount in native SPL token account to underlying lamports\n   *\n   * @param nativeAccount Account to sync\n   */\n  async syncNative(nativeAccount: PublicKey): Promise<void> {\n    await sendAndConfirmTransaction(\n      'SyncNative',\n      this.connection,\n      new Transaction().add(\n        Token.createSyncNativeInstruction(this.programId, nativeAccount),\n      ),\n      this.payer,\n    );\n  }\n\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n  static createInitMintInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    decimals: number,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n  ): TransactionInstruction {\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('decimals'),\n      Layout.publicKey('mintAuthority'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('freezeAuthority'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeMint instruction\n          decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n  static createInitAccountInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n  ): TransactionInstruction {\n    const keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 1, // InitializeAccount instruction\n      },\n      data,\n    );\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  static createTransferInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 3, // Transfer instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  static createApproveInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 4, // Approve instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createRevokeInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 5, // Approve instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  static createSetAuthorityInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('authorityType'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('newAuthority'),\n    ]);\n\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 6, // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: currentAuthority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: currentAuthority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  static createMintToInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 7, // MintTo instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 8, // Burn instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createCloseAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    dest: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 9, // CloseAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createFreezeAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 10, // FreezeAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createThawAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 11, // ThawAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  static createTransferCheckedInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    mint: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 12, // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  static createApproveCheckedInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 13, // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  static createMintToCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 14, // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 15, // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param programId SPL Token program account\n   * @param nativeAccount Account to sync lamports from\n   */\n  static createSyncNativeInstruction(\n    programId: PublicKey,\n    nativeAccount: PublicKey,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 17, // SyncNative instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: nativeAccount, isSigner: false, isWritable: true}];\n    return new TransactionInstruction({keys, programId: programId, data});\n  }\n\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n  static async getAssociatedTokenAddress(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    owner: PublicKey,\n    allowOwnerOffCurve: boolean = false,\n  ): Promise<PublicKey> {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) {\n      throw new Error(`Owner cannot sign: ${owner.toString()}`);\n    }\n    return (\n      await PublicKey.findProgramAddress(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedProgramId,\n      )\n    )[0];\n  }\n\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n  static createAssociatedTokenAccountInstruction(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    associatedAccount: PublicKey,\n    owner: PublicKey,\n    payer: PublicKey,\n  ): TransactionInstruction {\n    const data = Buffer.alloc(0);\n\n    let keys = [\n      {pubkey: payer, isSigner: true, isWritable: true},\n      {pubkey: associatedAccount, isSigner: false, isWritable: true},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: SystemProgram.programId, isSigner: false, isWritable: false},\n      {pubkey: programId, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}