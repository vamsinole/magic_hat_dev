{"ast":null,"code":"import _asyncToGenerator from \"/Users/vamshikrishnaenjapuri/magic_hat_ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/vamshikrishnaenjapuri/magic_hat_ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vamshikrishnaenjapuri/magic_hat_ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/vamshikrishnaenjapuri/magic_hat_ui/node_modules/@babel/runtime/regenerator/index.js\";\nimport { IdlCoder } from \"./idl\";\nimport { sha256 } from \"js-sha256\";\n/**\n * Number of bytes of the account discriminator.\n */\n\nexport var ACCOUNT_DISCRIMINATOR_SIZE = 8;\n/**\n * Encodes and decodes account objects.\n */\n\nexport var AccountsCoder = /*#__PURE__*/function () {\n  function AccountsCoder(idl) {\n    _classCallCheck(this, AccountsCoder);\n\n    if (idl.accounts === undefined) {\n      this.accountLayouts = new Map();\n      return;\n    }\n\n    var layouts = idl.accounts.map(function (acc) {\n      return [acc.name, IdlCoder.typeDefLayout(acc, idl.types)];\n    });\n    this.accountLayouts = new Map(layouts);\n  }\n\n  _createClass(AccountsCoder, [{\n    key: \"encode\",\n    value: function () {\n      var _encode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(accountName, account) {\n        var buffer, layout, len, accountData, discriminator;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n\n                layout = this.accountLayouts.get(accountName);\n                len = layout.encode(account, buffer);\n                accountData = buffer.slice(0, len);\n                _context.next = 6;\n                return accountDiscriminator(accountName);\n\n              case 6:\n                discriminator = _context.sent;\n                return _context.abrupt(\"return\", Buffer.concat([discriminator, accountData]));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function encode(_x, _x2) {\n        return _encode.apply(this, arguments);\n      }\n\n      return encode;\n    }()\n  }, {\n    key: \"decode\",\n    value: function decode(accountName, ix) {\n      // Chop off the discriminator before decoding.\n      var data = ix.slice(8);\n      var layout = this.accountLayouts.get(accountName);\n      return layout.decode(data);\n    }\n  }]);\n\n  return AccountsCoder;\n}(); // Calculates unique 8 byte discriminator prepended to all anchor accounts.\n\nexport function accountDiscriminator(_x3) {\n  return _accountDiscriminator.apply(this, arguments);\n}\n\nfunction _accountDiscriminator() {\n  _accountDiscriminator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Buffer.from(sha256.digest(\"account:\".concat(name))).slice(0, 8));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _accountDiscriminator.apply(this, arguments);\n}","map":{"version":3,"mappings":";;;;AAEA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA;;;;AAGA,OAAO,IAAMC,0BAA0B,GAAG,CAAnC;AAEP;;;;AAGA,WAAaC,aAAb;EAME,uBAAmBC,GAAnB,EAA2B;IAAA;;IACzB,IAAIA,GAAG,CAACC,QAAJ,KAAiBC,SAArB,EAAgC;MAC9B,KAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;MACA;IACD;;IACD,IAAMC,OAAO,GAAuBL,GAAG,CAACC,QAAJ,CAAaK,GAAb,CAAiB,UAACC,GAAD,EAAQ;MAC3D,OAAO,CAACA,GAAG,CAACC,IAAL,EAAWZ,QAAQ,CAACa,aAAT,CAAuBF,GAAvB,EAA4BP,GAAG,CAACU,KAAhC,CAAX,CAAP;IACD,CAFmC,CAApC;IAIA,KAAKP,cAAL,GAAsB,IAAIC,GAAJ,CAAQC,OAAR,CAAtB;EACD;;EAhBH;IAAA;IAAA;MAAA,uEAkBS,iBACLM,WADK,EAELC,OAFK;QAAA;QAAA;UAAA;YAAA;cAAA;gBAICC,MAJD,GAIUC,MAAM,CAACC,KAAP,CAAa,IAAb,CAJV,EAI8B;;gBAC7BC,MALD,GAKU,KAAKb,cAAL,CAAoBc,GAApB,CAAwBN,WAAxB,CALV;gBAMCO,GAND,GAMOF,MAAM,CAACG,MAAP,CAAcP,OAAd,EAAuBC,MAAvB,CANP;gBAODO,WAPC,GAOaP,MAAM,CAACQ,KAAP,CAAa,CAAb,EAAgBH,GAAhB,CAPb;gBAAA;gBAAA,OAQqBI,oBAAoB,CAACX,WAAD,CARzC;;cAAA;gBAQDY,aARC;gBAAA,iCASET,MAAM,CAACU,MAAP,CAAc,CAACD,aAAD,EAAgBH,WAAhB,CAAd,CATF;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAlBT;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA,OA8BS,gBAAgBT,WAAhB,EAAqCc,EAArC,EAA+C;MACpD;MACA,IAAMC,IAAI,GAAGD,EAAE,CAACJ,KAAH,CAAS,CAAT,CAAb;MACA,IAAML,MAAM,GAAG,KAAKb,cAAL,CAAoBc,GAApB,CAAwBN,WAAxB,CAAf;MACA,OAAOK,MAAM,CAACW,MAAP,CAAcD,IAAd,CAAP;IACD;EAnCH;;EAAA;AAAA,I,CAsCA;;AACA,gBAAsBJ,oBAAtB;EAAA;AAAA;;;mFAAO,kBAAoCd,IAApC;IAAA;MAAA;QAAA;UAAA;YAAA,kCACEM,MAAM,CAACc,IAAP,CAAY/B,MAAM,CAACgC,MAAP,mBAAyBrB,IAAzB,EAAZ,EAA8Ca,KAA9C,CAAoD,CAApD,EAAuD,CAAvD,CADF;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C","names":["IdlCoder","sha256","ACCOUNT_DISCRIMINATOR_SIZE","AccountsCoder","idl","accounts","undefined","accountLayouts","Map","layouts","map","acc","name","typeDefLayout","types","accountName","account","buffer","Buffer","alloc","layout","get","len","encode","accountData","slice","accountDiscriminator","discriminator","concat","ix","data","decode","from","digest"],"sourceRoot":"","sources":["../../../src/coder/accounts.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}