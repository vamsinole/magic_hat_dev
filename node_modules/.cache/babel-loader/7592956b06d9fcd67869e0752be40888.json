{"ast":null,"code":"import _slicedToArray from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _regeneratorRuntime from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/regenerator/index.js\";\nimport { splitArgsAndCtx } from \"../context\";\nimport { ProgramError } from \"../../error\";\n\nvar RpcFactory = /*#__PURE__*/function () {\n  function RpcFactory() {\n    _classCallCheck(this, RpcFactory);\n  }\n\n  _createClass(RpcFactory, null, [{\n    key: \"build\",\n    value: function build(idlIx, txFn, idlErrors, provider) {\n      var rpc = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _len,\n              args,\n              _key,\n              tx,\n              _splitArgsAndCtx,\n              _splitArgsAndCtx2,\n              ctx,\n              txSig,\n              translatedErr,\n              _args = arguments;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  for (_len = _args.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                    args[_key] = _args[_key];\n                  }\n\n                  tx = txFn.apply(void 0, args);\n                  _splitArgsAndCtx = splitArgsAndCtx(idlIx, [].concat(args)), _splitArgsAndCtx2 = _slicedToArray(_splitArgsAndCtx, 2), ctx = _splitArgsAndCtx2[1];\n                  _context.prev = 3;\n                  _context.next = 6;\n                  return provider.send(tx, ctx.signers, ctx.options);\n\n                case 6:\n                  txSig = _context.sent;\n                  return _context.abrupt(\"return\", txSig);\n\n                case 10:\n                  _context.prev = 10;\n                  _context.t0 = _context[\"catch\"](3);\n                  console.log(\"Translating error\", _context.t0);\n                  translatedErr = ProgramError.parse(_context.t0, idlErrors);\n\n                  if (!(translatedErr === null)) {\n                    _context.next = 16;\n                    break;\n                  }\n\n                  throw _context.t0;\n\n                case 16:\n                  throw translatedErr;\n\n                case 17:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[3, 10]]);\n        }));\n\n        return function rpc() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      return rpc;\n    }\n  }]);\n\n  return RpcFactory;\n}();\n\nexport { RpcFactory as default };","map":{"version":3,"mappings":";;;;;AAGA,SAASA,eAAT,QAAgC,YAAhC;AAEA,SAASC,YAAT,QAA6B,aAA7B;;IAEqBC,U;;;;;;;WACZ,eACLC,KADK,EAELC,IAFK,EAGLC,SAHK,EAILC,QAJK,EAIa;MAElB,IAAMC,GAAG;QAAA,oEAAG;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;UAAA;;UAAA;YAAA;cAAA;gBAAA;kBAAA,0BAAUC,IAAV;oBAAUA,IAAV;kBAAA;;kBACJC,EADI,GACCL,IAAI,MAAJ,SAAQI,IAAR,CADD;kBAAA,mBAEMR,eAAe,CAACG,KAAD,YAAYK,IAAZ,EAFrB,2DAEDE,GAFC;kBAAA;kBAAA;kBAAA,OAIYJ,QAAQ,CAACK,IAAT,CAAcF,EAAd,EAAkBC,GAAG,CAACE,OAAtB,EAA+BF,GAAG,CAACG,OAAnC,CAJZ;;gBAAA;kBAIFC,KAJE;kBAAA,iCAKDA,KALC;;gBAAA;kBAAA;kBAAA;kBAORC,OAAO,CAACC,GAAR,CAAY,mBAAZ;kBACIC,aARI,GAQYhB,YAAY,CAACiB,KAAb,cAAwBb,SAAxB,CARZ;;kBAAA,MASJY,aAAa,KAAK,IATd;oBAAA;oBAAA;kBAAA;;kBAAA;;gBAAA;kBAAA,MAYFA,aAZE;;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA,CAAH;;QAAA,gBAAHV,GAAG;UAAA;QAAA;MAAA,GAAT;;MAgBA,OAAOA,GAAP;IACD;;;;;;SAxBkBL,U","names":["splitArgsAndCtx","ProgramError","RpcFactory","idlIx","txFn","idlErrors","provider","rpc","args","tx","ctx","send","signers","options","txSig","console","log","translatedErr","parse"],"sourceRoot":"","sources":["../../../../src/program/namespace/rpc.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}