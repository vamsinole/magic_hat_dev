{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/regenerator/index.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { BaseSignerWalletAdapter, pollUntilReady, WalletAccountError, WalletNotConnectedError, WalletNotFoundError, WalletNotInstalledError, WalletPublicKeyError, WalletSignTransactionError } from '@solana/wallet-adapter-base';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nexport var Coin98WalletAdapter = /*#__PURE__*/function (_BaseSignerWalletAdap) {\n  _inherits(Coin98WalletAdapter, _BaseSignerWalletAdap);\n\n  var _super = _createSuper(Coin98WalletAdapter);\n\n  function Coin98WalletAdapter() {\n    var _this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Coin98WalletAdapter);\n\n    _this = _super.call(this);\n    _this._connecting = false;\n    _this._wallet = null;\n    _this._publicKey = null;\n    if (!_this.ready) pollUntilReady(_assertThisInitialized(_this), config.pollInterval || 1000, config.pollCount || 3);\n    return _this;\n  }\n\n  _createClass(Coin98WalletAdapter, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"ready\",\n    get: function get() {\n      return typeof window !== 'undefined' && !!window.coin98;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this._connecting;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      var _a;\n\n      return !!((_a = this._wallet) === null || _a === void 0 ? void 0 : _a.isConnected());\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      var _a;\n\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var wallet, account, _yield$wallet$connect, _yield$wallet$connect2, publicKey;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.connected || this.connecting)) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                this._connecting = true;\n                wallet = typeof window !== 'undefined' && ((_a = window.coin98) === null || _a === void 0 ? void 0 : _a.sol);\n\n                if (wallet) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw new WalletNotFoundError();\n\n              case 7:\n                if (wallet.isCoin98) {\n                  _context.next = 9;\n                  break;\n                }\n\n                throw new WalletNotInstalledError();\n\n              case 9:\n                _context.prev = 9;\n                _context.next = 12;\n                return wallet.connect();\n\n              case 12:\n                _yield$wallet$connect = _context.sent;\n                _yield$wallet$connect2 = _slicedToArray(_yield$wallet$connect, 1);\n                account = _yield$wallet$connect2[0];\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](9);\n                throw new WalletAccountError(_context.t0 === null || _context.t0 === void 0 ? void 0 : _context.t0.message, _context.t0);\n\n              case 20:\n                _context.prev = 20;\n                publicKey = new PublicKey(account);\n                _context.next = 27;\n                break;\n\n              case 24:\n                _context.prev = 24;\n                _context.t1 = _context[\"catch\"](20);\n                throw new WalletPublicKeyError(_context.t1 === null || _context.t1 === void 0 ? void 0 : _context.t1.message, _context.t1);\n\n              case 27:\n                this._wallet = wallet;\n                this._publicKey = publicKey;\n                this.emit('connect');\n                _context.next = 36;\n                break;\n\n              case 32:\n                _context.prev = 32;\n                _context.t2 = _context[\"catch\"](0);\n                this.emit('error', _context.t2);\n                throw _context.t2;\n\n              case 36:\n                _context.prev = 36;\n                this._connecting = false;\n                return _context.finish(36);\n\n              case 39:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 32, 36, 39], [9, 17], [20, 24]]);\n      }));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var wallet;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                wallet = this._wallet;\n\n                if (!wallet) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                this._wallet = null;\n                this._publicKey = null;\n                _context2.next = 6;\n                return wallet.disconnect();\n\n              case 6:\n                this.emit('disconnect');\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var wallet, response, publicKey, signature;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                wallet = this._wallet;\n\n                if (wallet) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                throw new WalletNotConnectedError();\n\n              case 4:\n                _context3.prev = 4;\n                _context3.next = 7;\n                return wallet.request({\n                  method: 'sol_sign',\n                  params: [transaction]\n                });\n\n              case 7:\n                response = _context3.sent;\n                publicKey = new PublicKey(response.publicKey);\n                signature = bs58.decode(response.signature);\n                transaction.addSignature(publicKey, signature);\n                return _context3.abrupt(\"return\", transaction);\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](4);\n                throw new WalletSignTransactionError(_context3.t0 === null || _context3.t0 === void 0 ? void 0 : _context3.t0.message, _context3.t0);\n\n              case 17:\n                _context3.next = 23;\n                break;\n\n              case 19:\n                _context3.prev = 19;\n                _context3.t1 = _context3[\"catch\"](0);\n                this.emit('error', _context3.t1);\n                throw _context3.t1;\n\n              case 23:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 19], [4, 14]]);\n      }));\n    }\n  }, {\n    key: \"signAllTransactions\",\n    value: function signAllTransactions(transactions) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var signedTransactions, _iterator, _step, transaction;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                signedTransactions = [];\n                _iterator = _createForOfIteratorHelper(transactions);\n                _context4.prev = 2;\n\n                _iterator.s();\n\n              case 4:\n                if ((_step = _iterator.n()).done) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                transaction = _step.value;\n                _context4.t0 = signedTransactions;\n                _context4.next = 9;\n                return this.signTransaction(transaction);\n\n              case 9:\n                _context4.t1 = _context4.sent;\n\n                _context4.t0.push.call(_context4.t0, _context4.t1);\n\n              case 11:\n                _context4.next = 4;\n                break;\n\n              case 13:\n                _context4.next = 18;\n                break;\n\n              case 15:\n                _context4.prev = 15;\n                _context4.t2 = _context4[\"catch\"](2);\n\n                _iterator.e(_context4.t2);\n\n              case 18:\n                _context4.prev = 18;\n\n                _iterator.f();\n\n                return _context4.finish(18);\n\n              case 21:\n                return _context4.abrupt(\"return\", signedTransactions);\n\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[2, 15, 18, 21]]);\n      }));\n    }\n  }]);\n\n  return Coin98WalletAdapter;\n}(BaseSignerWalletAdapter);","map":{"version":3,"mappings":"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","names":["BaseSignerWalletAdapter","pollUntilReady","WalletAccountError","WalletNotConnectedError","WalletNotFoundError","WalletNotInstalledError","WalletPublicKeyError","WalletSignTransactionError","PublicKey","bs58","Coin98WalletAdapter","config","_connecting","_wallet","_publicKey","ready","pollInterval","pollCount","window","coin98","_a","isConnected","connected","connecting","wallet","sol","isCoin98","connect","account","message","publicKey","emit","disconnect","transaction","request","method","params","response","signature","decode","addSignature","transactions","signedTransactions","signTransaction","push"],"sourceRoot":"","sources":["../src/adapter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}