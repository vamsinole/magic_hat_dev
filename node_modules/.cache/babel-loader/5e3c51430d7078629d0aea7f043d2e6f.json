{"ast":null,"code":"import _slicedToArray from\"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/node_modules/@babel/runtime/regenerator/index.js\";import*as anchor from'@project-serum/anchor';import{MintLayout,Token}from'@solana/spl-token';import{SystemProgram}from'@solana/web3.js';import{sendTransactions}from'./connection';import idlMagicHat from'./magic_hat.json';import{CIVIC,getAtaForMint,getNetworkExpire,getNetworkToken}from'./utils';import{SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,TOKEN_PROGRAM_ID,MAGIC_HAT_ID}from'./config';// import idl from \"./wallet_whitelist.json\";\nvar TOKEN_METADATA_PROGRAM_ID=new anchor.web3.PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');var MAGIC_HAT_PROGRAM_V2_ID=new anchor.web3.PublicKey('AGydXrbh2V9RH3h3cDzpws51tRDs2HbTtUXnCkq58bwH');export var awaitTransactionSignatureConfirmation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(txid,timeout,connection){var queryStatus,done,status,subId,_args3=arguments;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:queryStatus=_args3.length>3&&_args3[3]!==undefined?_args3[3]:false;done=false;status={slot:0,confirmations:0,err:null};subId=0;_context3.next=6;return new Promise(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve,reject){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setTimeout(function(){if(done){return;}done=true;console.log('Rejecting for timeout...');reject({timeout:true});},timeout);case 1:if(!(!done&&queryStatus)){_context2.next=7;break;}// eslint-disable-next-line no-loop-func\n_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var signatureStatuses;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return connection.getSignatureStatuses([txid]);case 3:signatureStatuses=_context.sent;status=signatureStatuses&&signatureStatuses.value[0];if(!done){if(!status){console.log('REST null result for',txid,status);}else if(status.err){console.log('REST error for',txid,status);done=true;reject(status.err);}else if(!status.confirmations){console.log('REST no confirmations for',txid,status);}else{console.log('REST confirmation for',txid,status);done=true;resolve(status);}}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);if(!done){console.log('REST connection error: txid',txid,_context.t0);}case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}))();_context2.next=5;return sleep(2000);case 5:_context2.next=1;break;case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x4,_x5){return _ref2.apply(this,arguments);};}());case 6:status=_context3.sent;//@ts-ignore\nif(connection&&connection._signatureSubscriptions&&connection._signatureSubscriptions[subId]){connection.removeSignatureListener(subId);}done=true;console.log('Returning status',status);return _context3.abrupt(\"return\",status);case 11:case\"end\":return _context3.stop();}}},_callee3);}));return function awaitTransactionSignatureConfirmation(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var createAssociatedTokenAccountInstruction=function createAssociatedTokenAccountInstruction(associatedTokenAddress,payer,walletAddress,splTokenMintAddress){var keys=[{pubkey:payer,isSigner:true,isWritable:true},{pubkey:associatedTokenAddress,isSigner:false,isWritable:true},{pubkey:walletAddress,isSigner:false,isWritable:false},{pubkey:splTokenMintAddress,isSigner:false,isWritable:false},{pubkey:anchor.web3.SystemProgram.programId,isSigner:false,isWritable:false},{pubkey:TOKEN_PROGRAM_ID,isSigner:false,isWritable:false},{pubkey:anchor.web3.SYSVAR_RENT_PUBKEY,isSigner:false,isWritable:false}];return new anchor.web3.TransactionInstruction({keys:keys,programId:SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,data:Buffer.from([])});};export var getMagicHatState=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(anchorWallet,magicHatId,connection){var _state$data$goLiveDat;var provider,idl,program,state,itemsAvailable,itemsRedeemed,itemsRemaining,presale;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:provider=new anchor.Provider(connection,anchorWallet,{preflightCommitment:'recent'});idl=idlMagicHat;program=new anchor.Program(idl,MAGIC_HAT_PROGRAM_V2_ID,provider);_context4.next=5;return program.account.magicHat.fetch(magicHatId);case 5:state=_context4.sent;itemsAvailable=state.data.itemsAvailable.toNumber();itemsRedeemed=state.itemsRedeemed.toNumber();itemsRemaining=itemsAvailable-itemsRedeemed;presale=state.data.whitelistMintSettings&&state.data.whitelistMintSettings.presale&&(!state.data.goLiveDate||state.data.goLiveDate.toNumber()>new Date().getTime()/1000);return _context4.abrupt(\"return\",{id:magicHatId,program:program,state:{itemsAvailable:itemsAvailable,itemsRedeemed:itemsRedeemed,itemsRemaining:itemsRemaining,isSoldOut:itemsRemaining===0,isActive:(presale||((_state$data$goLiveDat=state.data.goLiveDate)===null||_state$data$goLiveDat===void 0?void 0:_state$data$goLiveDat.toNumber())<new Date().getTime()/1000)&&(state.data.endSettings?state.data.endSettings.endSettingType.date?state.data.endSettings.number.toNumber()>new Date().getTime()/1000:itemsRedeemed<state.data.endSettings.number.toNumber():true),isPresale:presale,goLiveDate:state.data.goLiveDate,treasury:state.wallet,tokenMint:state.tokenMint,gatekeeper:state.data.gatekeeper,endSettings:state.data.endSettings,whitelistMintSettings:state.data.whitelistMintSettings,hiddenSettings:state.data.hiddenSettings,price:state.data.price}});case 11:case\"end\":return _context4.stop();}}},_callee4);}));return function getMagicHatState(_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();var getMasterEdition=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(mint){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer(),Buffer.from('edition')],TOKEN_METADATA_PROGRAM_ID);case 2:return _context5.abrupt(\"return\",_context5.sent[0]);case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function getMasterEdition(_x9){return _ref5.apply(this,arguments);};}();var getMetadata=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(mint){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer()],TOKEN_METADATA_PROGRAM_ID);case 2:return _context6.abrupt(\"return\",_context6.sent[0]);case 3:case\"end\":return _context6.stop();}}},_callee6);}));return function getMetadata(_x10){return _ref6.apply(this,arguments);};}();export var getMagicHatCreator=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(magicHat){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('magic_hat'),magicHat.toBuffer()],MAGIC_HAT_PROGRAM_V2_ID);case 2:return _context7.abrupt(\"return\",_context7.sent);case 3:case\"end\":return _context7.stop();}}},_callee7);}));return function getMagicHatCreator(_x11){return _ref7.apply(this,arguments);};}();export var mintOneToken=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(magicHat,payer,wallet,id){var mint,userTokenAccountAddress,userPayingAccountAddress,MAGIC_HAT_ID,remainingAccounts,signers,cleanupInstructions,instructions,_mint,whitelistToken,whitelistBurnAuthority,exists,transferAuthority,index,element,metadataAddress,masterEdition,_yield$getMagicHatCre,_yield$getMagicHatCre2,magicHatCreator,creatorBump;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:mint=anchor.web3.Keypair.generate();_context8.next=3;return getAtaForMint(mint.publicKey,payer);case 3:userTokenAccountAddress=_context8.sent[0];if(!magicHat.state.tokenMint){_context8.next=10;break;}_context8.next=7;return getAtaForMint(magicHat.state.tokenMint,payer);case 7:_context8.t0=_context8.sent[0];_context8.next=11;break;case 10:_context8.t0=payer;case 11:userPayingAccountAddress=_context8.t0;MAGIC_HAT_ID=magicHat.id;console.log(MAGIC_HAT_ID.toBase58());remainingAccounts=[];signers=[mint];cleanupInstructions=[];_context8.t1=anchor.web3.SystemProgram;_context8.t2=payer;_context8.t3=mint.publicKey;_context8.t4=MintLayout.span;_context8.next=23;return magicHat.program.provider.connection.getMinimumBalanceForRentExemption(MintLayout.span);case 23:_context8.t5=_context8.sent;_context8.t6=TOKEN_PROGRAM_ID;_context8.t7={fromPubkey:_context8.t2,newAccountPubkey:_context8.t3,space:_context8.t4,lamports:_context8.t5,programId:_context8.t6};_context8.t8=_context8.t1.createAccount.call(_context8.t1,_context8.t7);_context8.t9=Token.createInitMintInstruction(TOKEN_PROGRAM_ID,mint.publicKey,0,payer,payer);_context8.t10=createAssociatedTokenAccountInstruction(userTokenAccountAddress,payer,payer,mint.publicKey);_context8.t11=Token.createMintToInstruction(TOKEN_PROGRAM_ID,mint.publicKey,userTokenAccountAddress,payer,[],1);instructions=[_context8.t8,_context8.t9,_context8.t10,_context8.t11];if(!magicHat.state.gatekeeper){_context8.next=46;break;}_context8.t12=remainingAccounts;_context8.next=35;return getNetworkToken(payer,magicHat.state.gatekeeper.gatekeeperNetwork);case 35:_context8.t13=_context8.sent[0];_context8.t14={pubkey:_context8.t13,isWritable:true,isSigner:false};_context8.t12.push.call(_context8.t12,_context8.t14);if(!magicHat.state.gatekeeper.expireOnUse){_context8.next=46;break;}remainingAccounts.push({pubkey:CIVIC,isWritable:false,isSigner:false});_context8.t15=remainingAccounts;_context8.next=43;return getNetworkExpire(magicHat.state.gatekeeper.gatekeeperNetwork);case 43:_context8.t16=_context8.sent[0];_context8.t17={pubkey:_context8.t16,isWritable:false,isSigner:false};_context8.t15.push.call(_context8.t15,_context8.t17);case 46:if(!magicHat.state.whitelistMintSettings){_context8.next=61;break;}_mint=new anchor.web3.PublicKey(magicHat.state.whitelistMintSettings.mint);_context8.next=50;return getAtaForMint(_mint,payer);case 50:whitelistToken=_context8.sent[0];remainingAccounts.push({pubkey:whitelistToken,isWritable:true,isSigner:false});if(!magicHat.state.whitelistMintSettings.mode.burnEveryTime){_context8.next=61;break;}whitelistBurnAuthority=anchor.web3.Keypair.generate();remainingAccounts.push({pubkey:_mint,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:whitelistBurnAuthority.publicKey,isWritable:false,isSigner:true});signers.push(whitelistBurnAuthority);_context8.next=59;return magicHat.program.provider.connection.getAccountInfo(whitelistToken);case 59:exists=_context8.sent;if(exists){instructions.push(Token.createApproveInstruction(TOKEN_PROGRAM_ID,whitelistToken,whitelistBurnAuthority.publicKey,payer,[],1));cleanupInstructions.push(Token.createRevokeInstruction(TOKEN_PROGRAM_ID,whitelistToken,payer,[]));}case 61:if(magicHat.state.tokenMint){transferAuthority=anchor.web3.Keypair.generate();for(index=0;index<remainingAccounts.length;index++){element=remainingAccounts[index];if(element.pubkey===userPayingAccountAddress){console.log('Already Minted !!!');}}signers.push(transferAuthority);remainingAccounts.push({pubkey:userPayingAccountAddress,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:transferAuthority.publicKey,isWritable:false,isSigner:true});instructions.push(Token.createApproveInstruction(TOKEN_PROGRAM_ID,userPayingAccountAddress,transferAuthority.publicKey,payer,[],magicHat.state.price.toNumber()));cleanupInstructions.push(Token.createRevokeInstruction(TOKEN_PROGRAM_ID,userPayingAccountAddress,payer,[]));}_context8.next=64;return getMetadata(mint.publicKey);case 64:metadataAddress=_context8.sent;_context8.next=67;return getMasterEdition(mint.publicKey);case 67:masterEdition=_context8.sent;_context8.next=70;return getMagicHatCreator(MAGIC_HAT_ID);case 70:_yield$getMagicHatCre=_context8.sent;_yield$getMagicHatCre2=_slicedToArray(_yield$getMagicHatCre,2);magicHatCreator=_yield$getMagicHatCre2[0];creatorBump=_yield$getMagicHatCre2[1];_context8.t18=instructions;_context8.next=77;return magicHat.program.instruction.mintNft(creatorBump,{accounts:{magicHat:MAGIC_HAT_ID,magicHatCreator:magicHatCreator,payer:payer,wallet:magicHat.state.treasury,metadata:metadataAddress,mint:mint.publicKey,mintAuthority:payer,updateAuthority:payer,masterEdition:masterEdition,tokenMetadataProgram:TOKEN_METADATA_PROGRAM_ID,tokenProgram:TOKEN_PROGRAM_ID,systemProgram:SystemProgram.programId,rent:anchor.web3.SYSVAR_RENT_PUBKEY,clock:anchor.web3.SYSVAR_CLOCK_PUBKEY,recentBlockhashes:anchor.web3.SYSVAR_RECENT_BLOCKHASHES_PUBKEY,instructionSysvarAccount:anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY},remainingAccounts:remainingAccounts.length>0?remainingAccounts:undefined});case 77:_context8.t19=_context8.sent;_context8.t18.push.call(_context8.t18,_context8.t19);_context8.prev=79;_context8.next=82;return sendTransactions(magicHat.program.provider.connection,magicHat.program.provider.wallet,[instructions,cleanupInstructions],[signers,[]]);case 82:return _context8.abrupt(\"return\",_context8.sent.txs.map(function(t){return t.txid;}));case 85:_context8.prev=85;_context8.t20=_context8[\"catch\"](79);console.log(_context8.t20);case 88:return _context8.abrupt(\"return\",[]);case 89:case\"end\":return _context8.stop();}}},_callee8,null,[[79,85]]);}));return function mintOneToken(_x12,_x13,_x14,_x15){return _ref8.apply(this,arguments);};}();export var mintOneTokenWL=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(magicHat,payer,wallet_pda){var mint,userTokenAccountAddress,userPayingAccountAddress,remainingAccounts,signers,cleanupInstructions,instructions,_mint2,whitelistToken,whitelistBurnAuthority,exists,transferAuthority,index,element,metadataAddress,masterEdition,_yield$getMagicHatCre3,_yield$getMagicHatCre4,magicHatCreator,creatorBump;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:mint=anchor.web3.Keypair.generate();_context9.next=3;return getAtaForMint(mint.publicKey,payer);case 3:userTokenAccountAddress=_context9.sent[0];if(!magicHat.state.tokenMint){_context9.next=10;break;}_context9.next=7;return getAtaForMint(magicHat.state.tokenMint,payer);case 7:_context9.t0=_context9.sent[0];_context9.next=11;break;case 10:_context9.t0=payer;case 11:userPayingAccountAddress=_context9.t0;remainingAccounts=[];signers=[mint];cleanupInstructions=[];_context9.t1=anchor.web3.SystemProgram;_context9.t2=payer;_context9.t3=mint.publicKey;_context9.t4=MintLayout.span;_context9.next=21;return magicHat.program.provider.connection.getMinimumBalanceForRentExemption(MintLayout.span);case 21:_context9.t5=_context9.sent;_context9.t6=TOKEN_PROGRAM_ID;_context9.t7={fromPubkey:_context9.t2,newAccountPubkey:_context9.t3,space:_context9.t4,lamports:_context9.t5,programId:_context9.t6};_context9.t8=_context9.t1.createAccount.call(_context9.t1,_context9.t7);_context9.t9=Token.createInitMintInstruction(TOKEN_PROGRAM_ID,mint.publicKey,0,payer,payer);_context9.t10=createAssociatedTokenAccountInstruction(userTokenAccountAddress,payer,payer,mint.publicKey);_context9.t11=Token.createMintToInstruction(TOKEN_PROGRAM_ID,mint.publicKey,userTokenAccountAddress,payer,[],1);instructions=[_context9.t8,_context9.t9,_context9.t10,_context9.t11];if(!magicHat.state.gatekeeper){_context9.next=44;break;}_context9.t12=remainingAccounts;_context9.next=33;return getNetworkToken(payer,magicHat.state.gatekeeper.gatekeeperNetwork);case 33:_context9.t13=_context9.sent[0];_context9.t14={pubkey:_context9.t13,isWritable:true,isSigner:false};_context9.t12.push.call(_context9.t12,_context9.t14);if(!magicHat.state.gatekeeper.expireOnUse){_context9.next=44;break;}remainingAccounts.push({pubkey:CIVIC,isWritable:false,isSigner:false});_context9.t15=remainingAccounts;_context9.next=41;return getNetworkExpire(magicHat.state.gatekeeper.gatekeeperNetwork);case 41:_context9.t16=_context9.sent[0];_context9.t17={pubkey:_context9.t16,isWritable:false,isSigner:false};_context9.t15.push.call(_context9.t15,_context9.t17);case 44:if(!magicHat.state.whitelistMintSettings){_context9.next=59;break;}_mint2=new anchor.web3.PublicKey(magicHat.state.whitelistMintSettings.mint);_context9.next=48;return getAtaForMint(_mint2,payer);case 48:whitelistToken=_context9.sent[0];remainingAccounts.push({pubkey:whitelistToken,isWritable:true,isSigner:false});if(!magicHat.state.whitelistMintSettings.mode.burnEveryTime){_context9.next=59;break;}whitelistBurnAuthority=anchor.web3.Keypair.generate();remainingAccounts.push({pubkey:_mint2,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:whitelistBurnAuthority.publicKey,isWritable:false,isSigner:true});signers.push(whitelistBurnAuthority);_context9.next=57;return magicHat.program.provider.connection.getAccountInfo(whitelistToken);case 57:exists=_context9.sent;if(exists){instructions.push(Token.createApproveInstruction(TOKEN_PROGRAM_ID,whitelistToken,whitelistBurnAuthority.publicKey,payer,[],1));cleanupInstructions.push(Token.createRevokeInstruction(TOKEN_PROGRAM_ID,whitelistToken,payer,[]));}case 59:if(magicHat.state.tokenMint){transferAuthority=anchor.web3.Keypair.generate();for(index=0;index<remainingAccounts.length;index++){element=remainingAccounts[index];if(element.pubkey===userPayingAccountAddress){console.log('Already Minted !!!');}}signers.push(transferAuthority);remainingAccounts.push({pubkey:userPayingAccountAddress,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:transferAuthority.publicKey,isWritable:false,isSigner:true});instructions.push(Token.createApproveInstruction(TOKEN_PROGRAM_ID,userPayingAccountAddress,transferAuthority.publicKey,payer,[],magicHat.state.price.toNumber()));cleanupInstructions.push(Token.createRevokeInstruction(TOKEN_PROGRAM_ID,userPayingAccountAddress,payer,[]));}_context9.next=62;return getMetadata(mint.publicKey);case 62:metadataAddress=_context9.sent;_context9.next=65;return getMasterEdition(mint.publicKey);case 65:masterEdition=_context9.sent;_context9.next=68;return getMagicHatCreator(MAGIC_HAT_ID);case 68:_yield$getMagicHatCre3=_context9.sent;_yield$getMagicHatCre4=_slicedToArray(_yield$getMagicHatCre3,2);magicHatCreator=_yield$getMagicHatCre4[0];creatorBump=_yield$getMagicHatCre4[1];console.log(MAGIC_HAT_ID.toBase58());_context9.t18=instructions;_context9.next=76;return magicHat.program.instruction.wlMintNft(creatorBump,{accounts:{magicHat:MAGIC_HAT_ID,walletWhitelist:wallet_pda,magicHatCreator:magicHatCreator,whitelistedAddress:payer,wallet:magicHat.state.treasury,metadata:metadataAddress,mint:mint.publicKey,mintAuthority:payer,updateAuthority:payer,masterEdition:masterEdition,tokenMetadataProgram:TOKEN_METADATA_PROGRAM_ID,tokenProgram:TOKEN_PROGRAM_ID,systemProgram:SystemProgram.programId,rent:anchor.web3.SYSVAR_RENT_PUBKEY,clock:anchor.web3.SYSVAR_CLOCK_PUBKEY,recentBlockhashes:anchor.web3.SYSVAR_RECENT_BLOCKHASHES_PUBKEY,instructionSysvarAccount:anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY},remainingAccounts:remainingAccounts.length>0?remainingAccounts:undefined});case 76:_context9.t19=_context9.sent;_context9.t18.push.call(_context9.t18,_context9.t19);_context9.prev=78;_context9.next=81;return sendTransactions(magicHat.program.provider.connection,magicHat.program.provider.wallet,[instructions,cleanupInstructions],[signers,[]]);case 81:return _context9.abrupt(\"return\",_context9.sent.txs.map(function(t){return t.txid;}));case 84:_context9.prev=84;_context9.t20=_context9[\"catch\"](78);console.log(_context9.t20);case 87:return _context9.abrupt(\"return\",[]);case 88:case\"end\":return _context9.stop();}}},_callee9,null,[[78,84]]);}));return function mintOneTokenWL(_x16,_x17,_x18){return _ref9.apply(this,arguments);};}();export var shortenAddress=function shortenAddress(address){var chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;return\"\".concat(address.slice(0,chars),\"...\").concat(address.slice(-chars));};var sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};","map":{"version":3,"names":["anchor","MintLayout","Token","SystemProgram","sendTransactions","idlMagicHat","CIVIC","getAtaForMint","getNetworkExpire","getNetworkToken","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_PROGRAM_ID","MAGIC_HAT_ID","TOKEN_METADATA_PROGRAM_ID","web3","PublicKey","MAGIC_HAT_PROGRAM_V2_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","programId","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getMagicHatState","anchorWallet","magicHatId","provider","Provider","preflightCommitment","idl","program","Program","account","magicHat","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","presale","whitelistMintSettings","goLiveDate","Date","getTime","id","isSoldOut","isActive","endSettings","endSettingType","date","number","isPresale","treasury","wallet","tokenMint","gatekeeper","hiddenSettings","price","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getMagicHatCreator","mintOneToken","Keypair","generate","publicKey","userTokenAccountAddress","userPayingAccountAddress","toBase58","remainingAccounts","signers","cleanupInstructions","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","createInitMintInstruction","createMintToInstruction","instructions","gatekeeperNetwork","push","expireOnUse","whitelistToken","mode","burnEveryTime","whitelistBurnAuthority","getAccountInfo","exists","createApproveInstruction","createRevokeInstruction","transferAuthority","index","length","element","metadataAddress","masterEdition","magicHatCreator","creatorBump","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","undefined","txs","map","t","mintOneTokenWL","wallet_pda","wlMintNft","walletWhitelist","whitelistedAddress","shortenAddress","address","chars","slice","ms"],"sources":["/Users/vamshikrishnaenjapuri/Documents/secretalphanew/secret_alpha_ts/src/candy-machine.ts"],"sourcesContent":["import * as anchor from '@project-serum/anchor';\n\nimport { MintLayout, Token } from '@solana/spl-token';\nimport { PublicKey, SystemProgram } from '@solana/web3.js';\nimport { sendTransactions } from './connection';\nimport idlMagicHat from './magic_hat.json';\n\nimport {\n  CIVIC,\n  getAtaForMint,\n  getNetworkExpire,\n  getNetworkToken\n} from './utils';\nimport { SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID, TOKEN_PROGRAM_ID, MAGIC_HAT_ID } from './config';\n// import idl from \"./wallet_whitelist.json\";\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n);\n\nconst MAGIC_HAT_PROGRAM_V2_ID = new anchor.web3.PublicKey(\n  'AGydXrbh2V9RH3h3cDzpws51tRDs2HbTtUXnCkq58bwH',\n);\n\ninterface MagicHatState {\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  treasury: anchor.web3.PublicKey;\n  tokenMint: anchor.web3.PublicKey;\n  isSoldOut: boolean;\n  isActive: boolean;\n  isPresale: boolean;\n  goLiveDate: anchor.BN;\n  price: anchor.BN;\n  gatekeeper: null | {\n    expireOnUse: boolean;\n    gatekeeperNetwork: anchor.web3.PublicKey;\n  };\n  endSettings: null | {\n    number: anchor.BN;\n    endSettingType: any;\n  };\n  whitelistMintSettings: null | {\n    mode: any;\n    mint: anchor.web3.PublicKey;\n    presale: boolean;\n    discountPrice: null | anchor.BN;\n  };\n  hiddenSettings: null | {\n    name: string;\n    uri: string;\n    hash: Uint8Array;\n  };\n}\n\nexport interface MagicHatAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: MagicHatState;\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  queryStatus = false,\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log('REST no confirmations for', txid, status);\n            } else {\n              console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection && connection._signatureSubscriptions && connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log('Returning status', status);\n  return status;\n};\n\nconst createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n};\n\nexport const getMagicHatState = async (\n  anchorWallet: anchor.Wallet,\n  magicHatId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<MagicHatAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'recent',\n  });\n\n  const idl:any = idlMagicHat;\n\n  const program = new anchor.Program(idl, MAGIC_HAT_PROGRAM_V2_ID, provider);\n\n  const state: any = await program.account.magicHat.fetch(magicHatId);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  const presale =\n    state.data.whitelistMintSettings &&\n    state.data.whitelistMintSettings.presale &&\n    (!state.data.goLiveDate ||\n      state.data.goLiveDate.toNumber() > new Date().getTime() / 1000);\n\n  return {\n    id: magicHatId,\n    program,\n    state: {\n      itemsAvailable,\n      itemsRedeemed,\n      itemsRemaining,\n      isSoldOut: itemsRemaining === 0,\n      isActive:\n        (presale ||\n          state.data.goLiveDate?.toNumber() < new Date().getTime() / 1000) &&\n        (state.data.endSettings\n          ? state.data.endSettings.endSettingType.date\n            ? state.data.endSettings.number.toNumber() >\n              new Date().getTime() / 1000\n            : itemsRedeemed < state.data.endSettings.number.toNumber()\n          : true),\n      isPresale: presale,\n      goLiveDate: state.data.goLiveDate,\n      treasury: state.wallet,\n      tokenMint: state.tokenMint,\n      gatekeeper: state.data.gatekeeper,\n      endSettings: state.data.endSettings,\n      whitelistMintSettings: state.data.whitelistMintSettings,\n      hiddenSettings: state.data.hiddenSettings,\n      price: state.data.price,\n    },\n  };\n};\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('edition'),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const getMagicHatCreator = async (\n  magicHat: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('magic_hat'), magicHat.toBuffer()],\n    MAGIC_HAT_PROGRAM_V2_ID,\n  );\n};\n\nexport const mintOneToken = async (\n  magicHat: MagicHatAccount,\n  payer: anchor.web3.PublicKey,\n  wallet: any,\n  id:any\n): Promise<(string | undefined)[]> => {\n  const mint = anchor.web3.Keypair.generate();\n\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const userPayingAccountAddress = magicHat.state.tokenMint\n    ? (await getAtaForMint(magicHat.state.tokenMint, payer))[0]\n    : payer;\n\n  const MAGIC_HAT_ID = magicHat.id;\n  console.log(MAGIC_HAT_ID.toBase58());\n  const remainingAccounts = [];\n  const signers: anchor.web3.Keypair[] = [mint];\n  const cleanupInstructions = [];\n  const instructions  = [\n    anchor.web3.SystemProgram.createAccount({\n      fromPubkey: payer,\n      newAccountPubkey: mint.publicKey,\n      space: MintLayout.span,\n      lamports:\n        await magicHat.program.provider.connection.getMinimumBalanceForRentExemption(\n          MintLayout.span,\n        ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    Token.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      0,\n      payer,\n      payer,\n    ),\n    createAssociatedTokenAccountInstruction(\n      userTokenAccountAddress,\n      payer,\n      payer,\n      mint.publicKey,\n    ),\n    Token.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      userTokenAccountAddress,\n      payer,\n      [],\n      1,\n    )\n  ];\n\n  if (magicHat.state.gatekeeper) {\n    remainingAccounts.push({\n      pubkey: (\n        await getNetworkToken(\n          payer,\n          magicHat.state.gatekeeper.gatekeeperNetwork,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n    if (magicHat.state.gatekeeper.expireOnUse) {\n      remainingAccounts.push({\n        pubkey: CIVIC,\n        isWritable: false,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: (\n          await getNetworkExpire(\n            magicHat.state.gatekeeper.gatekeeperNetwork,\n          )\n        )[0],\n        isWritable: false,\n        isSigner: false,\n      });\n    }\n  }\n  if (magicHat.state.whitelistMintSettings) {\n    const mint = new anchor.web3.PublicKey(\n      magicHat.state.whitelistMintSettings.mint,\n    );\n\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\n    remainingAccounts.push({\n      pubkey: whitelistToken,\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (magicHat.state.whitelistMintSettings.mode.burnEveryTime) {\n      const whitelistBurnAuthority = anchor.web3.Keypair.generate();\n\n      remainingAccounts.push({\n        pubkey: mint,\n        isWritable: true,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: whitelistBurnAuthority.publicKey,\n        isWritable: false,\n        isSigner: true,\n      });\n      signers.push(whitelistBurnAuthority);\n      const exists =\n        await magicHat.program.provider.connection.getAccountInfo(\n          whitelistToken,\n        );\n      if (exists) {\n        instructions.push(\n          Token.createApproveInstruction(\n            TOKEN_PROGRAM_ID,\n            whitelistToken,\n            whitelistBurnAuthority.publicKey,\n            payer,\n            [],\n            1,\n          ),\n        );\n        cleanupInstructions.push(\n          Token.createRevokeInstruction(\n            TOKEN_PROGRAM_ID,\n            whitelistToken,\n            payer,\n            [],\n          ),\n        );\n      }\n    }\n  }\n\n  if (magicHat.state.tokenMint) {\n    const transferAuthority = anchor.web3.Keypair.generate();\n    for (let index = 0; index < remainingAccounts.length; index++) {\n      let element = remainingAccounts[index];\n      if (element.pubkey === userPayingAccountAddress) {\n        console.log('Already Minted !!!')\n      }\n    }\n    signers.push(transferAuthority);\n    remainingAccounts.push({\n      pubkey: userPayingAccountAddress,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: transferAuthority.publicKey,\n      isWritable: false,\n      isSigner: true,\n    });\n\n    instructions.push(\n      Token.createApproveInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        transferAuthority.publicKey,\n        payer,\n        [],\n        magicHat.state.price.toNumber(),\n      ),\n    );\n    cleanupInstructions.push(\n      Token.createRevokeInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        payer,\n        [],\n      ),\n    );\n  }\n  const metadataAddress = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const [magicHatCreator, creatorBump] = await getMagicHatCreator(\n    MAGIC_HAT_ID,\n  );\n\n  instructions.push(\n    await magicHat.program.instruction.mintNft(creatorBump, {\n      accounts: {\n        magicHat: MAGIC_HAT_ID,\n        magicHatCreator,\n        payer: payer,\n        wallet: magicHat.state.treasury,\n        metadata: metadataAddress,\n        mint: mint.publicKey,\n        mintAuthority: payer,\n        updateAuthority: payer,\n        masterEdition,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n        recentBlockhashes: anchor.web3.SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n      },\n      remainingAccounts:\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\n    }),\n  );\n  try {\n    return (\n      await sendTransactions(\n        magicHat.program.provider.connection,\n        magicHat.program.provider.wallet,\n        [instructions, cleanupInstructions],\n        [signers, []],\n      )\n    ).txs.map(t => t.txid);\n  } catch (e) {\n    console.log(e);\n  }\n\n  return [];\n};\n\nexport const mintOneTokenWL = async (\n  magicHat: MagicHatAccount,\n  payer: anchor.web3.PublicKey,\n  wallet_pda: any\n): Promise<(string | undefined)[]> => {\n  const mint = anchor.web3.Keypair.generate();\n\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const userPayingAccountAddress = magicHat.state.tokenMint\n    ? (await getAtaForMint(magicHat.state.tokenMint, payer))[0]\n    : payer;\n  const remainingAccounts = [];\n  const signers: anchor.web3.Keypair[] = [mint];\n  const cleanupInstructions = [];\n  const instructions  = [\n    anchor.web3.SystemProgram.createAccount({\n      fromPubkey: payer,\n      newAccountPubkey: mint.publicKey,\n      space: MintLayout.span,\n      lamports:\n        await magicHat.program.provider.connection.getMinimumBalanceForRentExemption(\n          MintLayout.span,\n        ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    Token.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      0,\n      payer,\n      payer,\n    ),\n    createAssociatedTokenAccountInstruction(\n      userTokenAccountAddress,\n      payer,\n      payer,\n      mint.publicKey,\n    ),\n    Token.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      userTokenAccountAddress,\n      payer,\n      [],\n      1,\n    )\n  ];\n\n  if (magicHat.state.gatekeeper) {\n    remainingAccounts.push({\n      pubkey: (\n        await getNetworkToken(\n          payer,\n          magicHat.state.gatekeeper.gatekeeperNetwork,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n    if (magicHat.state.gatekeeper.expireOnUse) {\n      remainingAccounts.push({\n        pubkey: CIVIC,\n        isWritable: false,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: (\n          await getNetworkExpire(\n            magicHat.state.gatekeeper.gatekeeperNetwork,\n          )\n        )[0],\n        isWritable: false,\n        isSigner: false,\n      });\n    }\n  }\n  if (magicHat.state.whitelistMintSettings) {\n    const mint = new anchor.web3.PublicKey(\n      magicHat.state.whitelistMintSettings.mint,\n    );\n\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\n    remainingAccounts.push({\n      pubkey: whitelistToken,\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (magicHat.state.whitelistMintSettings.mode.burnEveryTime) {\n      const whitelistBurnAuthority = anchor.web3.Keypair.generate();\n\n      remainingAccounts.push({\n        pubkey: mint,\n        isWritable: true,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: whitelistBurnAuthority.publicKey,\n        isWritable: false,\n        isSigner: true,\n      });\n      signers.push(whitelistBurnAuthority);\n      const exists =\n        await magicHat.program.provider.connection.getAccountInfo(\n          whitelistToken,\n        );\n      if (exists) {\n        instructions.push(\n          Token.createApproveInstruction(\n            TOKEN_PROGRAM_ID,\n            whitelistToken,\n            whitelistBurnAuthority.publicKey,\n            payer,\n            [],\n            1,\n          ),\n        );\n        cleanupInstructions.push(\n          Token.createRevokeInstruction(\n            TOKEN_PROGRAM_ID,\n            whitelistToken,\n            payer,\n            [],\n          ),\n        );\n      }\n    }\n  }\n\n  if (magicHat.state.tokenMint) {\n    const transferAuthority = anchor.web3.Keypair.generate();\n    for (let index = 0; index < remainingAccounts.length; index++) {\n      let element = remainingAccounts[index];\n      if (element.pubkey === userPayingAccountAddress) {\n        console.log('Already Minted !!!')\n      }\n    }\n    signers.push(transferAuthority);\n    remainingAccounts.push({\n      pubkey: userPayingAccountAddress,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: transferAuthority.publicKey,\n      isWritable: false,\n      isSigner: true,\n    });\n\n    instructions.push(\n      Token.createApproveInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        transferAuthority.publicKey,\n        payer,\n        [],\n        magicHat.state.price.toNumber(),\n      ),\n    );\n    cleanupInstructions.push(\n      Token.createRevokeInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        payer,\n        [],\n      ),\n    );\n  }\n  const metadataAddress = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const [magicHatCreator, creatorBump] = await getMagicHatCreator(\n    MAGIC_HAT_ID,\n  );\n  console.log(MAGIC_HAT_ID.toBase58());\n  instructions.push(\n    await magicHat.program.instruction.wlMintNft(creatorBump, {\n      accounts: {\n        magicHat: MAGIC_HAT_ID,\n        walletWhitelist: wallet_pda,\n        magicHatCreator: magicHatCreator,\n        whitelistedAddress: payer,\n        wallet: magicHat.state.treasury,\n        metadata: metadataAddress,\n        mint: mint.publicKey,\n        mintAuthority: payer,\n        updateAuthority: payer,\n        masterEdition,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n        recentBlockhashes: anchor.web3.SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n      },\n      remainingAccounts:\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\n    }),\n  );\n  try {\n    return (\n      await sendTransactions(\n        magicHat.program.provider.connection,\n        magicHat.program.provider.wallet,\n        [instructions, cleanupInstructions],\n        [signers, []],\n      )\n    ).txs.map(t => t.txid);\n  } catch (e) {\n    console.log(e);\n  }\n\n  return [];\n};\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}